<Window
	x:Class="Delta.XWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:Delta" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
	Name="mwyes"
	Title="XWindow"
	BorderThickness="2"
	Height="479"
	Width="749"
	MinWidth="749"
	MinHeight="479"
	WindowStartupLocation="CenterScreen"
	ResizeMode="CanResize"
	Background="#FF172026"
	WindowStyle="None"
	AllowsTransparency="True"
	Style="{DynamicResource WindowStyle1}"
	BorderBrush="#FF414141"
	Activated="Window_Activated"
	Deactivated="Window_Deactivated"
	MouseDown="Window_MouseDown"
	Closed="mwyes_Closed">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="InvisibleTextBox">
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="FrameworkElement.ContextMenu"
					Value="{x:Null}" />
				<Setter
					Property="TextBoxBase.CaretBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="Foreground"
					Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="KeyboardNavigation.TabNavigation"
					Value="None" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="UIElement.AllowDrop"
					Value="True" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Padding"
					Value="0" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<Border
								Name="border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True">
								<Grid>
									<ScrollViewer
										Name="PART_ContentHost"
										Focusable="False"
										HorizontalScrollBarVisibility="Hidden"
										VerticalScrollBarVisibility="Hidden" />
								</Grid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="TextBoxBase.IsInactiveSelectionHighlightEnabled"
								Value="True" />
						</MultiTrigger.Conditions>
					</MultiTrigger>
				</Style.Triggers>
			</Style>
			<Style
				x:Key="FocusVisual">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
								Margin="2"
								SnapsToDevicePixels="True"
								Stroke="{DynamicResource SystemColors.ControlTextBrushKey}"
								StrokeThickness="1"
								StrokeDashArray="1 2" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="RadioButton.Static.Background" />
			<SolidColorBrush
				Color="#FF707070"
				x:Key="RadioButton.Static.Border" />
			<Style
				x:Key="OptionMarkFocusVisual">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
								Margin="14,0,0,0"
								SnapsToDevicePixels="True"
								Stroke="{DynamicResource SystemColors.ControlTextBrushKey}"
								StrokeThickness="1"
								StrokeDashArray="1 2" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				Color="#FFF3F9FF"
				x:Key="RadioButton.MouseOver.Background" />
			<SolidColorBrush
				Color="#FF5593FF"
				x:Key="RadioButton.MouseOver.Border" />
			<SolidColorBrush
				Color="#FF212121"
				x:Key="RadioButton.MouseOver.Glyph" />
			<SolidColorBrush
				Color="#FFE6E6E6"
				x:Key="RadioButton.Disabled.Background" />
			<SolidColorBrush
				Color="#FFBCBCBC"
				x:Key="RadioButton.Disabled.Border" />
			<SolidColorBrush
				Color="#FF707070"
				x:Key="RadioButton.Disabled.Glyph" />
			<SolidColorBrush
				Color="#FFD9ECFF"
				x:Key="RadioButton.Pressed.Background" />
			<SolidColorBrush
				Color="#FF3C77DD"
				x:Key="RadioButton.Pressed.Border" />
			<SolidColorBrush
				Color="#FF212121"
				x:Key="RadioButton.Pressed.Glyph" />
			<SolidColorBrush
				Color="#FF212121"
				x:Key="RadioButton.Static.Glyph" />
			<Style
				TargetType="{x:Type RadioButton}"
				x:Key="switch">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource RadioButton.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource RadioButton.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RadioButton}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="check">
										<ThicknessAnimationUsingKeyFrames
											Storyboard.TargetProperty="(FrameworkElement.Margin)"
											Storyboard.TargetName="path">
											<EasingThicknessKeyFrame
												KeyTime="0:0:0.4"
												Value="0,25,0,0">
												<EasingThicknessKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="uncheck">
										<ThicknessAnimationUsingKeyFrames
											Storyboard.TargetProperty="(FrameworkElement.Margin)"
											Storyboard.TargetName="path">
											<EasingThicknessKeyFrame
												KeyTime="0:0:0.3"
												Value="-10,25,0,0">
												<EasingThicknessKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid
								Name="templateRoot"
								Background="#00FFFFFF"
								SnapsToDevicePixels="True">
								<Border
									Name="radioButtonBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									CornerRadius="100"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1,1,2,1"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Visibility="Collapsed">
									<Grid
										Name="markGrid"
										Margin="2">
										<Ellipse
											Name="optionMark"
											MinWidth="6"
											MinHeight="6"
											Opacity="0"
											Fill="{StaticResource RadioButton.Static.Glyph}" />
									</Grid>
								</Border>
								<ContentPresenter
									Name="contentPresenter"
									Grid.Column="1"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								<Path
									Name="path"
									Data="M0.175659,0.282043 L1.69721,0.72987 C2.55396,0.982029 3.1397,1.77165 3.13245,2.66471 L3.01912,16.6415 C3.01188,17.5345 2.41342,18.3145 1.5527,18.5528 L0.0240814,18.9759 L0.175659,0.282043"
									Fill="#FF77AFD7"
									HorizontalAlignment="Left"
									Height="15"
									Margin="-10,25,0,0"
									Stretch="Fill"
									VerticalAlignment="Top"
									Width="3.167" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="HasContent"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter
										Property="Padding"
										Value="4,-1,0,0" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<TriggerBase.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF77AFD7"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF445663"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
										<BeginStoryboard
											Name="uncheck_BeginStoryboard"
											Storyboard="{StaticResource uncheck}" />
									</TriggerBase.ExitActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Storyboard
				x:Key="switchhome">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="switcheroo">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="script">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="-272">
						<EasingDoubleKeyFrame.EasingFunction>
							<ExponentialEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="execution">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="-272" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.9"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<ExponentialEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="40">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="61" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:1"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="0" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:1"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="executor">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.5"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.5"
						Value="260,47.05,0,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="execution">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.5"
						Value="65,45,421,0" />
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.9"
						Value="65,45,421,0" />
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="33">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
					Storyboard.TargetName="border2">
					<EasingColorKeyFrame
						KeyTime="0:0:0.5"
						Value="#FF172026" />
				</ColorAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="switchcloud">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="42" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="39" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="45" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="43" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="scripts">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.4"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="script">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="-209">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="execution">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="-209">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="-266" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="switcheroo">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="67">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
					Storyboard.TargetName="border2">
					<EasingColorKeyFrame
						KeyTime="0:0:0.4"
						Value="#FF172026" />
				</ColorAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.4"
						Value="260,45,0,10">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="script">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.4"
						Value="66,38.3,420,6.7" />
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.8"
						Value="66,38.3,420,6.7" />
				</ThicknessAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="switchconfig">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="switcheroo">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="189">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<SolidColorBrush
				Color="#FFABAdB3"
				x:Key="TextBox.Static.Border" />
			<SolidColorBrush
				Color="#FF7EB4EA"
				x:Key="TextBox.MouseOver.Border" />
			<SolidColorBrush
				Color="#FF569DE5"
				x:Key="TextBox.Focus.Border" />
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="search">
				<Setter
					Property="Background"
					Value="{DynamicResource SystemColors.WindowBrushKey}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource TextBox.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="KeyboardNavigation.TabNavigation"
					Value="None" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="UIElement.AllowDrop"
					Value="True" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="Storyboard1">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF3E5361" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard2">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF2C3B45" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid>
								<Border
									Name="border"
									CornerRadius="3"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									SnapsToDevicePixels="True"
									BorderBrush="#FF2C3B45">
									<Grid>
										<ScrollViewer
											Name="PART_ContentHost"
											Focusable="False"
											HorizontalScrollBarVisibility="Hidden"
											VerticalScrollBarVisibility="Hidden"
											Margin="31.75,0,0,0" />
										<Label
											Name="WaterMarkLabel"
											Margin="31.75,0,0,0"
											Content="{TemplateBinding Tag}"
											Visibility="Collapsed"
											FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
											Padding="0,7,0,0"
											Foreground="#FF627A8A" />
									</Grid>
								</Border>
								<Path
									Data="M13.125,13.125 L10.3212,10.3162 M11.875,6.5625 C11.875,7.97146 11.3153,9.32272 10.319,10.319 C9.32272,11.3153 7.97146,11.875 6.5625,11.875 C5.15354,11.875 3.80228,11.3153 2.806,10.319 C1.80971,9.32272 1.25,7.97146 1.25,6.5625 C1.25,5.15354 1.80971,3.80228 2.806,2.806 C3.80228,1.80971 5.15354,1.25 6.5625,1.25 C7.97146,1.25 9.32272,1.80971 10.319,2.806 C11.3153,3.80228 11.875,5.15354 11.875,6.5625 L11.875,6.5625"
									HorizontalAlignment="Left"
									Height="11"
									Margin="11.833,11.917,0,0"
									Stretch="Fill"
									Stroke="#FF8099AB"
									VerticalAlignment="Top"
									Width="11"
									StrokeThickness="1.5" />
							</Grid>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="Text"
											Value="" />
										<Condition
											Property="UIElement.IsKeyboardFocused"
											Value="False" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="WaterMarkLabel"
										Property="Visibility"
										Value="Visible" />
								</MultiTrigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										Property="Foreground"
										Value="#FF696969" />
								</Trigger>
								<Trigger
									Property="UIElement.IsKeyboardFocused"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard2_BeginStoryboard"
											Storyboard="{StaticResource Storyboard2}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource Storyboard1}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="TextBoxBase.IsInactiveSelectionHighlightEnabled"
								Value="True" />
							<Condition
								Property="TextBoxBase.IsSelectionActive"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="TextBoxBase.SelectionBrush"
							Value="{DynamicResource SystemColors.InactiveSelectionHighlightBrushKey}" />
					</MultiTrigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type RadioButton}"
				x:Key="category">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource RadioButton.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource RadioButton.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RadioButton}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="Storyboard1">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1E3E54" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF3F80AE" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard2">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1F2931" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF2C3B45" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid
								Name="templateRoot"
								Background="#00FFFFFF"
								SnapsToDevicePixels="True">
								<Border
									Name="radioButtonBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									CornerRadius="100"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1,1,2,1"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Visibility="Collapsed">
									<Grid
										Name="markGrid"
										Margin="2">
										<Ellipse
											Name="optionMark"
											MinWidth="6"
											MinHeight="6"
											Opacity="0"
											Fill="{StaticResource RadioButton.Static.Glyph}" />
									</Grid>
								</Border>
								<Border
									Name="border"
									CornerRadius="3"
									SnapsToDevicePixels="True"
									Margin="0"
									BorderBrush="#FF2C3B45"
									BorderThickness="1.5">
									<Border.Background>
										<LinearGradientBrush
											EndPoint="0.5,1"
											StartPoint="0.5,0">
											<GradientStop
												Color="#FF1F2931"
												Offset="0" />
											<GradientStop
												Color="#FF1B252C"
												Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter
									Name="contentPresenter"
									Grid.Column="0"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="10,5,0,-4"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Height="28"
									Width="53.083" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="HasContent"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter
										Property="Padding"
										Value="4,-1,0,0" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard2_BeginStoryboard"
											Storyboard="{StaticResource Storyboard2}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF627A8A"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource Storyboard1}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF63A7D7"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<Setter
										TargetName="optionMark"
										Property="UIElement.Opacity"
										Value="1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				Color="#1F26A0DA"
				x:Key="Item.MouseOver.Background" />
			<SolidColorBrush
				Color="#a826A0Da"
				x:Key="Item.MouseOver.Border" />
			<SolidColorBrush
				Color="#3DDADADA"
				x:Key="Item.SelectedInactive.Background" />
			<SolidColorBrush
				Color="#FFDADADA"
				x:Key="Item.SelectedInactive.Border" />
			<SolidColorBrush
				Color="#3D26A0DA"
				x:Key="Item.SelectedActive.Background" />
			<SolidColorBrush
				Color="#FF26A0DA"
				x:Key="Item.SelectedActive.Border" />
			<Style
				TargetType="{x:Type ListBoxItem}"
				x:Key="listboxitem">
				<Setter
					Property="Padding"
					Value="14,1,4,1" />
				<Setter
					Property="Foreground"
					Value="#FF83B1D1" />
				<Setter
					Property="FontFamily"
					Value="/Delta;component/Assets/Fonts/#Poppins SemiBold" />
				<Setter
					Property="UIElement.SnapsToDevicePixels"
					Value="True" />
				<Setter
					Property="Padding"
					Value="4,1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="VerticalContentAlignment"
					Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ListBoxItem}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="Storyboard1">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1E3F57" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1E3F57" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF3F80AE" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard2">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1B252C" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1B252C" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF2F3D47" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard3">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF466074" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard4">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="Bd">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF2F3D47" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="Bd"
								CornerRadius="3"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True"
								Height="29"
								Width="162"
								BorderBrush="#FF2F3D47"
								Margin="0,0,0,10">
								<Border.Background>
									<LinearGradientBrush
										EndPoint="0.5,1"
										StartPoint="0.5,0">
										<GradientStop
											Color="#FF1F2931"
											Offset="0" />
										<GradientStop
											Color="#FF1B252C"
											Offset="1" />
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard4_BeginStoryboard"
											Storyboard="{StaticResource Storyboard4}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Name="Storyboard3_BeginStoryboard"
											Storyboard="{StaticResource Storyboard3}" />
									</TriggerBase.EnterActions>
									<MultiTrigger.Conditions>
										<Condition
											Property="UIElement.IsMouseOver"
											Value="True" />
									</MultiTrigger.Conditions>
								</MultiTrigger>
								<MultiTrigger>
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard2_BeginStoryboard1"
											Storyboard="{StaticResource Storyboard2}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF83B1CF"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource Storyboard1}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF63A7D7"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
									</MultiTrigger.Conditions>
								</MultiTrigger>
								<MultiTrigger>
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard2_BeginStoryboard"
											Storyboard="{StaticResource Storyboard2}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF83B1CF"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource Storyboard1}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF63A7D7"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
									</MultiTrigger.Conditions>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Storyboard
				x:Key="hidebar">
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="execution">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="-123,45,421,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
					Storyboard.TargetName="path">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="0.62">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
					Storyboard.TargetName="border">
					<EasingColorKeyFrame
						KeyTime="0:0:0.6"
						Value="#FF172026" />
				</ColorAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
					Storyboard.TargetName="path1">
					<EasingColorKeyFrame
						KeyTime="0:0:0.6"
						Value="#FF172026" />
				</ColorAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="75,47.05,0,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="script">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="-123,45,421,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
					Storyboard.TargetName="path3">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="0.206">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="showsidebar">
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="execution">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="65,45,421,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
					Storyboard.TargetName="path">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="-180.723">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
					Storyboard.TargetName="border">
					<EasingColorKeyFrame
						KeyTime="0:0:0.6"
						Value="#FF26333C" />
				</ColorAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
					Storyboard.TargetName="path1">
					<EasingColorKeyFrame
						KeyTime="0:0:0.6"
						Value="#FF26333C" />
				</ColorAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="260,47.05,0,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="script">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="script">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="65,45,421,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="border1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="0" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
					Storyboard.TargetName="path3">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="-180.063">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="path2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="-0.001" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="OptionMark.Static.Background" />
			<SolidColorBrush
				Color="#FF707070"
				x:Key="OptionMark.Static.Border" />
			<SolidColorBrush
				Color="#FFF3F9FF"
				x:Key="OptionMark.MouseOver.Background" />
			<SolidColorBrush
				Color="#FF5593FF"
				x:Key="OptionMark.MouseOver.Border" />
			<SolidColorBrush
				Color="#FF212121"
				x:Key="OptionMark.MouseOver.Glyph" />
			<SolidColorBrush
				Color="#FFE6E6E6"
				x:Key="OptionMark.Disabled.Background" />
			<SolidColorBrush
				Color="#FFBCBCBC"
				x:Key="OptionMark.Disabled.Border" />
			<SolidColorBrush
				Color="#FF707070"
				x:Key="OptionMark.Disabled.Glyph" />
			<SolidColorBrush
				Color="#FFD9ECFF"
				x:Key="OptionMark.Pressed.Background" />
			<SolidColorBrush
				Color="#FF3C77DD"
				x:Key="OptionMark.Pressed.Border" />
			<SolidColorBrush
				Color="#FF212121"
				x:Key="OptionMark.Pressed.Glyph" />
			<SolidColorBrush
				Color="#FF212121"
				x:Key="OptionMark.Static.Glyph" />
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="emptycheckbox">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource OptionMark.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource OptionMark.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<Grid
								Name="templateRoot"
								SnapsToDevicePixels="True">
								<Panel.Background>
									<SolidColorBrush
										Color="Black"
										Opacity="0.005" />
								</Panel.Background>
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="Auto" />
									<ColumnDefinition
										Width="*" />
								</Grid.ColumnDefinitions>
								<Border
									Name="checkBoxBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Visibility="Collapsed">
									<Grid
										Name="markGrid">
										<Path
											Name="optionMark"
											Data="F1 M9.97498,1.22334 L4.6983,9.09834 L4.52164,9.09834 L0,5.19331 L1.27664,3.52165 L4.255,6.08833 L8.33331,1.52588E-05 L9.97498,1.22334"
											Margin="1"
											Opacity="0"
											Stretch="None"
											Fill="{StaticResource OptionMark.Static.Glyph}" />
										<Rectangle
											Name="indeterminateMark"
											Margin="2"
											Opacity="0"
											Fill="{StaticResource OptionMark.Static.Glyph}" />
									</Grid>
								</Border>
								<ContentPresenter
									Name="contentPresenter"
									Grid.Column="1"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="HasContent"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter
										Property="Padding"
										Value="4,-1,0,0" />
								</Trigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="checkBoxBorder"
										Property="Background"
										Value="{StaticResource OptionMark.MouseOver.Background}" />
									<Setter
										TargetName="checkBoxBorder"
										Property="BorderBrush"
										Value="{StaticResource OptionMark.MouseOver.Border}" />
									<Setter
										TargetName="optionMark"
										Property="Fill"
										Value="{StaticResource OptionMark.MouseOver.Glyph}" />
									<Setter
										TargetName="indeterminateMark"
										Property="Fill"
										Value="{StaticResource OptionMark.MouseOver.Glyph}" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="checkBoxBorder"
										Property="Background"
										Value="{StaticResource OptionMark.Disabled.Background}" />
									<Setter
										TargetName="checkBoxBorder"
										Property="BorderBrush"
										Value="{StaticResource OptionMark.Disabled.Border}" />
									<Setter
										TargetName="optionMark"
										Property="Fill"
										Value="{StaticResource OptionMark.Disabled.Glyph}" />
									<Setter
										TargetName="indeterminateMark"
										Property="Fill"
										Value="{StaticResource OptionMark.Disabled.Glyph}" />
								</Trigger>
								<Trigger
									Property="IsPressed"
									Value="True">
									<Setter
										TargetName="checkBoxBorder"
										Property="Background"
										Value="{StaticResource OptionMark.Pressed.Background}" />
									<Setter
										TargetName="checkBoxBorder"
										Property="BorderBrush"
										Value="{StaticResource OptionMark.Pressed.Border}" />
									<Setter
										TargetName="optionMark"
										Property="Fill"
										Value="{StaticResource OptionMark.Pressed.Glyph}" />
									<Setter
										TargetName="indeterminateMark"
										Property="Fill"
										Value="{StaticResource OptionMark.Pressed.Glyph}" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<Setter
										TargetName="optionMark"
										Property="UIElement.Opacity"
										Value="1" />
									<Setter
										TargetName="indeterminateMark"
										Property="UIElement.Opacity"
										Value="0" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="{x:Null}">
									<Setter
										TargetName="optionMark"
										Property="UIElement.Opacity"
										Value="0" />
									<Setter
										TargetName="indeterminateMark"
										Property="UIElement.Opacity"
										Value="1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				Color="#FFDDDDDD"
				x:Key="Button.Static.Background" />
			<SolidColorBrush
				Color="#FF707070"
				x:Key="Button.Static.Border" />
			<SolidColorBrush
				Color="#FFBEE6FD"
				x:Key="Button.MouseOver.Background" />
			<SolidColorBrush
				Color="#FF3C7FB1"
				x:Key="Button.MouseOver.Border" />
			<SolidColorBrush
				Color="#FFC4E5F6"
				x:Key="Button.Pressed.Background" />
			<SolidColorBrush
				Color="#FF2C628B"
				x:Key="Button.Pressed.Border" />
			<SolidColorBrush
				Color="#FFF4F4F4"
				x:Key="Button.Disabled.Background" />
			<SolidColorBrush
				Color="#FFADB2B5"
				x:Key="Button.Disabled.Border" />
			<SolidColorBrush
				Color="#FF838383"
				x:Key="Button.Disabled.Foreground" />
			<Style
				TargetType="{x:Type Button}"
				x:Key="Button">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="Storyboard1">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF405361" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.2"
												Value="0.07" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard2">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF2C3B45" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.2"
												Value="0.0025" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="press">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.849">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.5">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.875">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="-0.25">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="release">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.988">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="border"
								CornerRadius="3"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								BorderBrush="#FF2C3B45"
								RenderTransformOrigin="0.5,0.5">
								<UIElement.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform />
										<TranslateTransform />
									</TransformGroup>
								</UIElement.RenderTransform>
								<Border.Background>
									<SolidColorBrush
										Color="#FF2C75BD"
										Opacity="0.0025" />
								</Border.Background>
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsPressed"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Name="press_BeginStoryboard"
											Storyboard="{StaticResource press}" />
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="release_BeginStoryboard"
											Storyboard="{StaticResource release}" />
									</TriggerBase.ExitActions>
								</Trigger>
								<Trigger
									Property="Button.IsDefaulted"
									Value="True">
									<Setter
										TargetName="border"
										Value="{DynamicResource SystemColors.HighlightBrushKey}"
										Property="BorderBrush" />
								</Trigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard2_BeginStoryboard"
											Storyboard="{StaticResource Storyboard2}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource Storyboard1}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="TabItem.Static.Background">
				<GradientStop
					Color="#F0F0F0"
					Offset="0.0" />
				<GradientStop
					Color="#E5E5E5"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#ACACAC"
				x:Key="TabItem.Static.Border" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="TabItem.MouseOver.Background">
				<GradientStop
					Color="#ECF4FC"
					Offset="0.0" />
				<GradientStop
					Color="#DCECFC"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#7EB4EA"
				x:Key="TabItem.MouseOver.Border" />
			<SolidColorBrush
				Color="#F0F0F0"
				x:Key="TabItem.Disabled.Background" />
			<SolidColorBrush
				Color="#D9D9D9"
				x:Key="TabItem.Disabled.Border" />
			<SolidColorBrush
				Color="#ACACAC"
				x:Key="TabItem.Selected.Border" />
			<SolidColorBrush
				Color="#FFFFFF"
				x:Key="TabItem.Selected.Background" />
			<Style
				TargetType="{x:Type TabItem}"
				x:Key="tab">
				<Setter
					Property="FontFamily"
					Value="/Delta;component/Assets/Fonts/#Poppins SemiBold" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Foreground"
					Value="#FF000000" />
				<Setter
					Property="Background"
					Value="{StaticResource TabItem.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource TabItem.Static.Border}" />
				<Setter
					Property="Margin"
					Value="0" />
				<Setter
					Property="Padding"
					Value="6,2,6,2" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Stretch" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Stretch" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabItem}">
							<Grid
								Name="templateRoot"
								SnapsToDevicePixels="True"
								Height="38"
								Margin="0,0,3,0">
								<Border
									Name="mainBorder"
									CornerRadius="4 4 0 0"
									BorderThickness="1,1,1,0"
									Margin="0,0,0,9"
									Height="Auto"
									BorderBrush="#FF26333B"
									Background="#FF172026">
									<StackPanel
										Orientation="Horizontal">
										<ContentPresenter
											Name="contentPresenter"
											ContentSource="Header"
											Focusable="False"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											Margin="10,0,4,0"
											HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
											VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
										<!--Unknown connection ID: 2-->
										<Button
											Name="button"
											Width="19"
											Height="20"
											Margin="0,0,5,0"
											Style="{DynamicResource close}"
											Cursor="Hand"
											BorderBrush="{x:Null}"
											Background="{x:Null}">
											<Path
												Data="M8.265,0.929289 L8.19429,0.858579 L8.12358,0.929289 L5,4.05286 L1.87642,0.929289 L1.80571,0.858579 L1.735,0.929289 L0.929289,1.735 L0.858579,1.80571 L0.929289,1.87642 L4.05286,5 L0.929289,8.12358 L0.858579,8.19429 L0.929289,8.265 L1.735,9.07071 L1.80571,9.14142 L1.87642,9.07071 L5,5.94714 L8.12358,9.07071 L8.19429,9.14142 L8.265,9.07071 L9.07071,8.265 L9.14142,8.19429 L9.07071,8.12358 L5.94714,5 L9.07071,1.87642 L9.14142,1.80571 L9.07071,1.735 L8.265,0.929289"
												Fill="#FF547993"
												Height="8"
												Stretch="Fill"
												Width="8" />
										</Button>
									</StackPanel>
								</Border>
								<Border
									Name="border"
									Margin="0,28,0,9"
									Background="#FF26333B"
									Opacity="0"
									BorderBrush="{x:Null}" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="Selector.IsSelected"
									Value="False">
									<Setter
										TargetName="mainBorder"
										Property="BorderBrush"
										Value="#FF172026" />
									<Setter
										TargetName="button"
										Property="Visibility"
										Value="Collapsed" />
									<Setter
										TargetName="border"
										Property="UIElement.Opacity"
										Value="1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="close">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="Storyboard1">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.2"
												Value="0.15" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="Storyboard2">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.2"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="border"
								CornerRadius="25"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True">
								<Border.Background>
									<SolidColorBrush
										Color="#FF6394B6"
										Opacity="0.0025" />
								</Border.Background>
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="Button.IsDefaulted"
									Value="True">
									<Setter
										TargetName="border"
										Value="{DynamicResource SystemColors.HighlightBrushKey}"
										Property="BorderBrush" />
								</Trigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="Storyboard2_BeginStoryboard"
											Storyboard="{StaticResource Storyboard2}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource Storyboard1}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type TabControl}"
				x:Key="tabctrl">
				<Setter
					Property="Padding"
					Value="2" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Background"
					Value="{StaticResource TabItem.Selected.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource TabItem.Selected.Border}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabControl}">
							<Grid
								Name="templateRoot"
								ClipToBounds="True"
								SnapsToDevicePixels="True"
								KeyboardNavigation.TabNavigation="Local">
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Name="ColumnDefinition0" />
									<ColumnDefinition
										Name="ColumnDefinition1"
										Width="0" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition
										Name="RowDefinition0"
										Height="Auto" />
									<RowDefinition
										Name="RowDefinition1"
										Height="*" />
								</Grid.RowDefinitions>
								<Border
									BorderBrush="#FF26333B"
									BorderThickness="1"
									HorizontalAlignment="Stretch"
									Height="1"
									Margin="0,30,0,0"
									Grid.RowSpan="1"
									VerticalAlignment="Top"
									Width="Auto" />
								<ScrollViewer
									Name="tab_scroller"
									VerticalScrollBarVisibility="Disabled"
									HorizontalScrollBarVisibility="Auto"
									Height="39">
									<StackPanel
										Orientation="Horizontal"
										Height="39">
										<TabPanel
											Name="headerPanel"
											Background="#00FFFFFF"
											Grid.Column="0"
											IsItemsHost="True"
											Margin="13,2,4,0"
											Grid.Row="0"
											KeyboardNavigation.TabIndex="1"
											ZIndex="1" />
										<!--Unknown connection ID: 3-->
										<Button
											Width="23"
											Height="24"
											Margin="0,3,0,0"
											Style="{DynamicResource close}"
											VerticalAlignment="Top"
											Background="{x:Null}"
											BorderBrush="{x:Null}">
											<Path
												Data="M0,6 L6,6 M12,6 L6,6 M6,6 L6,12 M6,6 L6,0"
												Height="11"
												Stretch="Fill"
												Width="11"
												Stroke="#FFCFCFCF"
												Margin="0,-1,0,0" />
										</Button>
									</StackPanel>
								</ScrollViewer>
								<Border
									Name="contentPanel"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Grid.Column="0"
									KeyboardNavigation.DirectionalNavigation="Contained"
									Grid.Row="1"
									KeyboardNavigation.TabIndex="2"
									KeyboardNavigation.TabNavigation="Local">
									<ContentPresenter
										Name="PART_SelectedContentHost"
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Padding}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="TabControl.TabStripPlacement"
									Value="Bottom">
									<Setter
										TargetName="headerPanel"
										Property="Row"
										Value="1" />
									<Setter
										TargetName="contentPanel"
										Property="Row"
										Value="0" />
									<Setter
										TargetName="RowDefinition0"
										Property="Height"
										Value="*" />
									<Setter
										TargetName="RowDefinition1"
										Property="Height"
										Value="Auto" />
									<Setter
										TargetName="headerPanel"
										Property="Margin"
										Value="2,0,2,2" />
								</Trigger>
								<Trigger
									Property="TabControl.TabStripPlacement"
									Value="Left">
									<Setter
										TargetName="headerPanel"
										Property="Row"
										Value="0" />
									<Setter
										TargetName="contentPanel"
										Property="Row"
										Value="0" />
									<Setter
										TargetName="headerPanel"
										Property="Column"
										Value="0" />
									<Setter
										TargetName="contentPanel"
										Property="Column"
										Value="1" />
									<Setter
										TargetName="ColumnDefinition0"
										Property="Width"
										Value="Auto" />
									<Setter
										TargetName="ColumnDefinition1"
										Property="Width"
										Value="*" />
									<Setter
										TargetName="RowDefinition0"
										Property="Height"
										Value="*" />
									<Setter
										TargetName="RowDefinition1"
										Property="Height"
										Value="0" />
									<Setter
										TargetName="headerPanel"
										Property="Margin"
										Value="2,2,0,2" />
								</Trigger>
								<Trigger
									Property="TabControl.TabStripPlacement"
									Value="Right">
									<Setter
										TargetName="headerPanel"
										Property="Row"
										Value="0" />
									<Setter
										TargetName="contentPanel"
										Property="Row"
										Value="0" />
									<Setter
										TargetName="headerPanel"
										Property="Column"
										Value="1" />
									<Setter
										TargetName="contentPanel"
										Property="Column"
										Value="0" />
									<Setter
										TargetName="ColumnDefinition0"
										Property="Width"
										Value="*" />
									<Setter
										TargetName="ColumnDefinition1"
										Property="Width"
										Value="Auto" />
									<Setter
										TargetName="RowDefinition0"
										Property="Height"
										Value="*" />
									<Setter
										TargetName="RowDefinition1"
										Property="Height"
										Value="0" />
									<Setter
										TargetName="headerPanel"
										Property="Margin"
										Value="0,2,2,2" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="templateRoot"
										Value="{DynamicResource SystemColors.GrayTextBrushKey}"
										Property="Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="script">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								CornerRadius="8"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								Background="#FF1E2931">
								<UIElement.Effect>
									<DropShadowEffect
										BlurRadius="16"
										ShadowDepth="0"
										Opacity="0.05" />
								</UIElement.Effect>
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="Stretch"
									Margin="0,1,-1,1"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="Stretch" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="Button.IsDefaulted"
									Value="True">
									<Setter
										TargetName="border"
										Value="{DynamicResource SystemColors.HighlightBrushKey}"
										Property="BorderBrush" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="likes">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="inandout">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.669" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="1.186" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="1.036" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.655" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="1.138" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="0.987" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="-0.042" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="-0.126" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="-0.126" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.017" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="-0.137" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="-0.294" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.6"
												Value="#FF54A1D8" />
											<EasingColorKeyFrame
												KeyTime="0:0:0.8"
												Value="#FF54A1D8" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="inandout_Copy1">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.669" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="1.186" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="1.036" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.655" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="1.138" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="0.987" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="-0.042" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="-0.126" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="-0.126" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.017" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="-0.137" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="-0.294" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.6"
												Value="#FF2C3B45" />
											<EasingColorKeyFrame
												KeyTime="0:0:0.8"
												Value="#FF2C3B45" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="border"
								CornerRadius="22"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								Background="#FF2C3B45"
								Cursor="Hand">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									RenderTransformOrigin="0.5,0.5">
									<UIElement.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</UIElement.RenderTransform>
								</ContentPresenter>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="inandout_Copy1_BeginStoryboard"
											Storyboard="{StaticResource inandout_Copy1}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Name="inandout_BeginStoryboard"
											Storyboard="{StaticResource inandout}" />
									</TriggerBase.EnterActions>
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF1E2931"
													Duration="0:0:0.5"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF6A8A9F"
													Duration="0:0:0.5"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
									<Setter
										TargetName="border"
										Property="FrameworkElement.Cursor"
										Value="Hand" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="share">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="inandout">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.669" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="1.186" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="1.036" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.655" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="1.138" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="0.987" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="-0.042" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="-0.126" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="-0.126" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.017" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.6"
												Value="-0.137" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.8"
												Value="-0.294" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.6"
												Value="#FF54A1D8" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="border"
								CornerRadius="22"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								Background="#FF2C3B45">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									RenderTransformOrigin="0.5,0.5">
									<UIElement.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</UIElement.RenderTransform>
								</ContentPresenter>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="BorderBrush"
										Value="#FF3C5768" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="execute">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="over">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.2"
												Value="0.15" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="off">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
											Storyboard.TargetName="border">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.2"
												Value="0.005" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="border"
								CornerRadius="2"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								Cursor="Hand">
								<Border.Background>
									<SolidColorBrush
										Color="#FF2C6E9C"
										Opacity="0.005" />
								</Border.Background>
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="Button.IsDefaulted"
									Value="True">
									<Setter
										TargetName="border"
										Value="{DynamicResource SystemColors.HighlightBrushKey}"
										Property="BorderBrush" />
								</Trigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="off_BeginStoryboard"
											Storyboard="{StaticResource off}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource over}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.Static.Background">
				<GradientStop
					Color="#FFF0F0F0"
					Offset="0.0" />
				<GradientStop
					Color="#FFE5E5E5"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#FFACACAC"
				x:Key="ComboBox.Static.Border" />
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="ComboBox.Static.Editable.Background" />
			<SolidColorBrush
				Color="#FFABADB3"
				x:Key="ComboBox.Static.Editable.Border" />
			<SolidColorBrush
				Color="Transparent"
				x:Key="ComboBox.Static.Editable.Button.Background" />
			<SolidColorBrush
				Color="Transparent"
				x:Key="ComboBox.Static.Editable.Button.Border" />
			<SolidColorBrush
				Color="#FF000000"
				x:Key="ComboBox.MouseOver.Glyph" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.MouseOver.Background">
				<GradientStop
					Color="#FFECF4FC"
					Offset="0.0" />
				<GradientStop
					Color="#FFDCECFC"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#FF7EB4EA"
				x:Key="ComboBox.MouseOver.Border" />
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="ComboBox.MouseOver.Editable.Background" />
			<SolidColorBrush
				Color="#FF7EB4EA"
				x:Key="ComboBox.MouseOver.Editable.Border" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.MouseOver.Editable.Button.Background">
				<GradientStop
					Color="#FFEBF4FC"
					Offset="0.0" />
				<GradientStop
					Color="#FFDCECFC"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#FF7EB4EA"
				x:Key="ComboBox.MouseOver.Editable.Button.Border" />
			<SolidColorBrush
				Color="#FF000000"
				x:Key="ComboBox.Pressed.Glyph" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.Pressed.Background">
				<GradientStop
					Color="#FFDAECFC"
					Offset="0.0" />
				<GradientStop
					Color="#FFC4E0FC"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#FF569DE5"
				x:Key="ComboBox.Pressed.Border" />
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="ComboBox.Pressed.Editable.Background" />
			<SolidColorBrush
				Color="#FF569DE5"
				x:Key="ComboBox.Pressed.Editable.Border" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.Pressed.Editable.Button.Background">
				<GradientStop
					Color="#FFDAEBFC"
					Offset="0.0" />
				<GradientStop
					Color="#FFC4E0FC"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#FF569DE5"
				x:Key="ComboBox.Pressed.Editable.Button.Border" />
			<SolidColorBrush
				Color="#FFBFBFBF"
				x:Key="ComboBox.Disabled.Glyph" />
			<SolidColorBrush
				Color="#FFF0F0F0"
				x:Key="ComboBox.Disabled.Background" />
			<SolidColorBrush
				Color="#FFD9D9D9"
				x:Key="ComboBox.Disabled.Border" />
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="ComboBox.Disabled.Editable.Background" />
			<SolidColorBrush
				Color="#FFBFBFBF"
				x:Key="ComboBox.Disabled.Editable.Border" />
			<SolidColorBrush
				Color="Transparent"
				x:Key="ComboBox.Disabled.Editable.Button.Background" />
			<SolidColorBrush
				Color="Transparent"
				x:Key="ComboBox.Disabled.Editable.Button.Border" />
			<SolidColorBrush
				Color="#FF606060"
				x:Key="ComboBox.Static.Glyph" />
			<Style
				TargetType="{x:Type ToggleButton}"
				x:Key="ComboBoxToggleButton">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="ButtonBase.ClickMode"
					Value="Press" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToggleButton}">
							<Border
								Name="templateRoot"
								CornerRadius="2"
								SnapsToDevicePixels="True"
								Background="#FF1B252C"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="#FF2C3B45">
								<Border
									Name="splitBorder"
									CornerRadius="2"
									Width="26.25"
									SnapsToDevicePixels="True"
									Margin="0"
									HorizontalAlignment="Right"
									BorderThickness="1"
									BorderBrush="#00FFFFFF">
									<Path
										Name="arrow"
										VerticalAlignment="Center"
										Margin="9,12.52,8.02,9.938"
										HorizontalAlignment="Center"
										Fill="#FF83B1D1"
										Data="F1 M0,-2.9582284E-31 L2.667,2.66665 L5.3334,-2.9582284E-31 L0,-2.9582284E-31"
										Height="3.542"
										Width="7.23"
										Stretch="Fill" />
								</Border>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				TargetType="{x:Type ComboBox}"
				x:Key="ComboBoxTemplate">
				<Grid
					Name="templateRoot"
					SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"
							Width="0" />
					</Grid.ColumnDefinitions>
					<Popup
						Name="PART_Popup"
						AllowsTransparency="True"
						Grid.ColumnSpan="2"
						Margin="1"
						PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
						Placement="Bottom"
						IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
						<Themes:SystemDropShadowChrome
							Name="shadow"
							Color="Transparent"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
							<Border
								Name="dropDownBorder"
								BorderBrush="#FF1B252C"
								BorderThickness="1"
								Background="#FF1B252C">
								<ScrollViewer
									Name="DropDownScrollViewer">
									<Grid
										Name="grid"
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Name="canvas"
											HorizontalAlignment="Left"
											Height="0"
											VerticalAlignment="Top"
											Width="0">
											<Rectangle
												Name="opaqueRect"
												Fill="{Binding Background, ElementName=dropDownBorder}"
												Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton
						Name="toggleButton"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Grid.ColumnSpan="2"
						Style="{StaticResource ComboBoxToggleButton}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<ContentPresenter
						Name="contentPresenter"
						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						Content="{TemplateBinding SelectionBoxItem}"
						ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						IsHitTestVisible="False"
						Margin="{TemplateBinding Padding}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger
						SourceName="PART_Popup"
						Property="Popup.HasDropShadow"
						Value="True">
						<Setter
							TargetName="shadow"
							Property="Margin"
							Value="0,0,5,5" />
						<Setter
							TargetName="shadow"
							Property="Themes:SystemDropShadowChrome.Color"
							Value="#71000000" />
					</Trigger>
					<Trigger
						Property="ItemsControl.HasItems"
						Value="False">
						<Setter
							TargetName="dropDownBorder"
							Property="Height"
							Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="ItemsControl.IsGrouping"
								Value="True" />
							<Condition
								Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="CanContentScroll"
							Value="False" />
					</MultiTrigger>
					<Trigger
						SourceName="DropDownScrollViewer"
						Property="CanContentScroll"
						Value="False">
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Top"
							Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Left"
							Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="TextBox.Static.Background" />
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="ComboBoxEditableTextBox">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="UIElement.AllowDrop"
					Value="True" />
				<Setter
					Property="MinWidth"
					Value="0" />
				<Setter
					Property="MinHeight"
					Value="0" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<ScrollViewer
								Name="PART_ContentHost"
								Background="#00FFFFFF"
								Focusable="False"
								HorizontalScrollBarVisibility="Hidden"
								VerticalScrollBarVisibility="Hidden" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				TargetType="{x:Type ComboBox}"
				x:Key="ComboBoxEditableTemplate">
				<Grid
					Name="templateRoot"
					SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"
							Width="0" />
					</Grid.ColumnDefinitions>
					<Popup
						Name="PART_Popup"
						AllowsTransparency="True"
						Grid.ColumnSpan="2"
						PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
						Placement="Bottom"
						IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
						<Themes:SystemDropShadowChrome
							Name="shadow"
							Color="Transparent"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
							<Border
								Name="dropDownBorder"
								BorderBrush="{DynamicResource SystemColors.WindowFrameBrushKey}"
								BorderThickness="1"
								Background="{DynamicResource SystemColors.WindowBrushKey}">
								<ScrollViewer
									Name="DropDownScrollViewer">
									<Grid
										Name="grid"
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Name="canvas"
											HorizontalAlignment="Left"
											Height="0"
											VerticalAlignment="Top"
											Width="0">
											<Rectangle
												Name="opaqueRect"
												Fill="{Binding Background, ElementName=dropDownBorder}"
												Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton
						Name="toggleButton"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Grid.ColumnSpan="2"
						Style="{StaticResource ComboBoxToggleButton}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<Border
						Name="border"
						Margin="{TemplateBinding BorderThickness}"
						Background="{StaticResource TextBox.Static.Background}">
						<TextBox
							Name="PART_EditableTextBox"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Style="{StaticResource ComboBoxEditableTextBox}"
							IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger
						Property="IsEnabled"
						Value="False">
						<Setter
							TargetName="border"
							Property="UIElement.Opacity"
							Value="0.56" />
					</Trigger>
					<Trigger
						Property="UIElement.IsKeyboardFocusWithin"
						Value="True">
						<Setter
							Property="Foreground"
							Value="#FF000000" />
					</Trigger>
					<Trigger
						SourceName="PART_Popup"
						Property="Popup.HasDropShadow"
						Value="True">
						<Setter
							TargetName="shadow"
							Property="Margin"
							Value="0,0,5,5" />
						<Setter
							TargetName="shadow"
							Property="Themes:SystemDropShadowChrome.Color"
							Value="#71000000" />
					</Trigger>
					<Trigger
						Property="ItemsControl.HasItems"
						Value="False">
						<Setter
							TargetName="dropDownBorder"
							Property="Height"
							Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="ItemsControl.IsGrouping"
								Value="True" />
							<Condition
								Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="CanContentScroll"
							Value="False" />
					</MultiTrigger>
					<Trigger
						SourceName="DropDownScrollViewer"
						Property="CanContentScroll"
						Value="False">
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Top"
							Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Left"
							Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<Style
				TargetType="{x:Type ComboBox}"
				x:Key="combobox">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource ComboBox.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource ComboBox.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.WindowTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="VerticalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="Padding"
					Value="6,3,5,3" />
				<Setter
					Property="CanContentScroll"
					Value="True" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="Both" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Template"
					Value="{StaticResource ComboBoxTemplate}" />
				<Style.Triggers>
					<Trigger
						Property="ComboBox.IsEditable"
						Value="True">
						<Setter
							Property="IsTabStop"
							Value="False" />
						<Setter
							Property="Padding"
							Value="2" />
						<Setter
							Property="Template"
							Value="{StaticResource ComboBoxEditableTemplate}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type ScrollViewer}"
				x:Key="{x:Type ScrollViewer}">
				<Setter
					Property="Template"
					Value="{DynamicResource scrollviewer}" />
			</Style>
			<ControlTemplate
				TargetType="{x:Type ScrollViewer}"
				x:Key="scrollviewer">
				<Grid
					Name="Grid"
					Background="{TemplateBinding Background}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="*" />
						<RowDefinition
							Height="Auto" />
					</Grid.RowDefinitions>
					<Rectangle
						Name="Corner"
						Grid.Column="1"
						Fill="{DynamicResource SystemColors.ControlBrushKey}"
						Grid.Row="1" />
					<ScrollContentPresenter
						Name="PART_ScrollContentPresenter"
						CanContentScroll="{TemplateBinding CanContentScroll}"
						CanHorizontallyScroll="False"
						CanVerticallyScroll="False"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						Content="{TemplateBinding Content}"
						Grid.Column="0"
						Margin="{TemplateBinding Padding}"
						Grid.Row="0" />
					<ScrollBar
						Name="PART_VerticalScrollBar"
						AutomationProperties.AutomationId="VerticalScrollBar"
						Cursor="Arrow"
						Grid.Column="0"
						Maximum="{TemplateBinding ScrollableHeight}"
						Minimum="0"
						Grid.Row="0"
						Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
						ViewportSize="{TemplateBinding ViewportHeight}"
						Style="{DynamicResource scrollbar}"
						Margin="0,0,3.334,0"
						HorizontalAlignment="Right"
						Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
						Background="{x:Null}"
						BorderBrush="{x:Null}" />
					<ScrollBar
						Name="PART_HorizontalScrollBar"
						AutomationProperties.AutomationId="HorizontalScrollBar"
						Cursor="Arrow"
						Grid.Column="0"
						Maximum="{TemplateBinding ScrollableWidth}"
						Minimum="0"
						Orientation="Horizontal"
						Grid.Row="1"
						Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
						ViewportSize="{TemplateBinding ViewportWidth}"
						Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
						Background="{x:Null}"
						BorderBrush="{x:Null}" />
				</Grid>
			</ControlTemplate>
			<SolidColorBrush
				Color="#F0F0F0"
				x:Key="ScrollBar.Static.Background" />
			<SolidColorBrush
				Color="#F0F0F0"
				x:Key="ScrollBar.Static.Border" />
			<SolidColorBrush
				Color="#FFFFFF"
				x:Key="ScrollBar.Pressed.Glyph" />
			<SolidColorBrush
				Color="#000000"
				x:Key="ScrollBar.MouseOver.Glyph" />
			<SolidColorBrush
				Color="#BFBFBF"
				x:Key="ScrollBar.Disabled.Glyph" />
			<SolidColorBrush
				Color="#606060"
				x:Key="ScrollBar.Static.Glyph" />
			<SolidColorBrush
				Color="#DADADA"
				x:Key="ScrollBar.MouseOver.Background" />
			<SolidColorBrush
				Color="#DADADA"
				x:Key="ScrollBar.MouseOver.Border" />
			<SolidColorBrush
				Color="#606060"
				x:Key="ScrollBar.Pressed.Background" />
			<SolidColorBrush
				Color="#606060"
				x:Key="ScrollBar.Pressed.Border" />
			<SolidColorBrush
				Color="#F0F0F0"
				x:Key="ScrollBar.Disabled.Background" />
			<SolidColorBrush
				Color="#F0F0F0"
				x:Key="ScrollBar.Disabled.Border" />
			<Style
				TargetType="{x:Type RepeatButton}"
				x:Key="ScrollBarButton">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Border
								Name="border"
								BorderThickness="1"
								SnapsToDevicePixels="True"
								Background="{x:Null}">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type RepeatButton}"
				x:Key="RepeatButtonTransparent">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Rectangle
								Fill="{TemplateBinding Background}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				Color="#A6A6A6"
				x:Key="ScrollBar.MouseOver.Thumb" />
			<SolidColorBrush
				Color="#606060"
				x:Key="ScrollBar.Pressed.Thumb" />
			<SolidColorBrush
				Color="#CDCDCD"
				x:Key="ScrollBar.Static.Thumb" />
			<Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarThumbVertical">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Rectangle
								Name="rectangle"
								Fill="#FF233039"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								Margin="11.5,0,0,-0.003" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Fill"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
								</Trigger>
								<Trigger
									Property="Thumb.IsDragging"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Fill"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarThumbHorizontal">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Rectangle
								Name="rectangle"
								Fill="#FF233039"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								Margin="0,5.167,0,5.667"
								RadiusY="1.333"
								RadiusX="1.333" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Fill"
										Value="#FF31434F" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ScrollBar}"
				x:Key="{x:Type ScrollBar}">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="Stylus.IsPressAndHoldEnabled"
					Value="False" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Background"
					Value="{StaticResource ScrollBar.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource ScrollBar.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1,0" />
				<Setter
					Property="Width"
					Value="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}" />
				<Setter
					Property="MinWidth"
					Value="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollBar}">
							<Grid
								Name="Bg"
								SnapsToDevicePixels="True">
								<Grid.RowDefinitions>
									<RowDefinition
										MaxHeight="{DynamicResource SystemParameters.VerticalScrollBarButtonHeightKey}" />
									<RowDefinition
										Height="0.00001*" />
									<RowDefinition
										MaxHeight="{DynamicResource SystemParameters.VerticalScrollBarButtonHeightKey}" />
								</Grid.RowDefinitions>
								<Border
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Grid.Row="1" />
								<RepeatButton
									Name="PART_LineUpButton"
									Command="{x:Static ScrollBar.LineUpCommand}"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Visibility="Visible"
									Margin="5.375,0,-5.375,0"
									Style="{StaticResource ScrollBarButton}"
									Background="{x:Null}">
									<Path
										Name="ArrowTop"
										Data="M0,4 C0,4 7,4 7,4 C7,4 3.5,0.5 3.5,0.5 C3.5,0.5 0,4 0,4"
										Fill="#FF3F5463"
										Margin="0"
										Stretch="Uniform"
										Height="3.5"
										Width="7" />
								</RepeatButton>
								<Track
									Name="PART_Track"
									IsDirectionReversed="True"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Grid.Row="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageUpCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageDownCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb
											Style="{StaticResource ScrollBarThumbVertical}" />
									</Track.Thumb>
								</Track>
								<RepeatButton
									Name="PART_LineDownButton"
									Command="{x:Static ScrollBar.LineDownCommand}"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Grid.Row="2"
									Visibility="Visible"
									Margin="5.375,0,-5.375,0"
									Style="{StaticResource ScrollBarButton}">
									<Path
										Name="ArrowBottom"
										Data="M0,2.5 C0,2.5 7,2.5 7,2.5 C7,2.5 3.5,6 3.5,6 C3.5,6 0,2.5 0,2.5"
										Fill="#FF3F5463"
										Margin="0"
										Stretch="Uniform"
										Height="3.5"
										Width="7" />
								</RepeatButton>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
										<Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="ArrowBottom"
										Property="Fill"
										Value="{StaticResource ScrollBar.Pressed.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
										<Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="ArrowTop"
										Property="Fill"
										Value="{StaticResource ScrollBar.Pressed.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="ArrowBottom"
										Property="Fill"
										Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="ArrowTop"
										Property="Fill"
										Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
								</MultiDataTrigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="ArrowTop"
										Property="Fill"
										Value="{StaticResource ScrollBar.Disabled.Glyph}" />
									<Setter
										TargetName="ArrowBottom"
										Property="Fill"
										Value="{StaticResource ScrollBar.Disabled.Glyph}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="ScrollBar.Orientation"
						Value="Horizontal">
						<Setter
							Property="Width"
							Value="Auto" />
						<Setter
							Property="MinWidth"
							Value="0" />
						<Setter
							Property="Height"
							Value="{DynamicResource SystemParameters.HorizontalScrollBarHeightKey}" />
						<Setter
							Property="MinHeight"
							Value="{DynamicResource SystemParameters.HorizontalScrollBarHeightKey}" />
						<Setter
							Property="BorderThickness"
							Value="0,1" />
						<Setter
							Property="Template">
							<Setter.Value>
								<ControlTemplate
									TargetType="{x:Type ScrollBar}">
									<Grid
										Name="Bg"
										SnapsToDevicePixels="True">
										<Grid.ColumnDefinitions>
											<ColumnDefinition
												MaxWidth="{DynamicResource SystemParameters.HorizontalScrollBarButtonWidthKey}" />
											<ColumnDefinition
												Width="0.00001*" />
											<ColumnDefinition
												MaxWidth="{DynamicResource SystemParameters.HorizontalScrollBarButtonWidthKey}" />
										</Grid.ColumnDefinitions>
										<Border
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											Background="{TemplateBinding Background}"
											Grid.Column="1" />
										<RepeatButton
											Name="PART_LineLeftButton"
											Command="{x:Static ScrollBar.LineLeftCommand}"
											IsEnabled="{TemplateBinding IsMouseOver}"
											Style="{StaticResource ScrollBarButton}">
											<Path
												Name="ArrowLeft"
												Data="M3.18,7 C3.18,7 3.18,0 3.18,0 C3.18,0 0,3.5 0,3.5 C0,3.5 3.18,7 3.18,7"
												Fill="#FF3F5463"
												Margin="0"
												Stretch="Uniform"
												Height="7"
												Width="3.18" />
										</RepeatButton>
										<Track
											Name="PART_Track"
											Grid.Column="1"
											IsEnabled="{TemplateBinding IsMouseOver}">
											<Track.DecreaseRepeatButton>
												<RepeatButton
													Command="{x:Static ScrollBar.PageLeftCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton
													Command="{x:Static ScrollBar.PageRightCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb
													Style="{StaticResource ScrollBarThumbHorizontal}" />
											</Track.Thumb>
										</Track>
										<RepeatButton
											Name="PART_LineRightButton"
											Grid.Column="2"
											Command="{x:Static ScrollBar.LineRightCommand}"
											IsEnabled="{TemplateBinding IsMouseOver}"
											Style="{StaticResource ScrollBarButton}">
											<Path
												Name="ArrowRight"
												Data="M1.81,7 C1.81,7 1.81,0 1.81,0 C1.81,0 5,3.5 5,3.5 C5,3.5 1.81,7 1.81,7"
												Fill="#FF3F5463"
												Margin="0"
												Stretch="Uniform"
												Height="7"
												Width="3.19" />
										</RepeatButton>
									</Grid>
									<ControlTemplate.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
												<Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
											</MultiDataTrigger.Conditions>
											<Setter
												TargetName="ArrowRight"
												Property="Fill"
												Value="{StaticResource ScrollBar.Pressed.Glyph}" />
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
												<Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
											</MultiDataTrigger.Conditions>
											<Setter
												TargetName="ArrowLeft"
												Property="Fill"
												Value="{StaticResource ScrollBar.Pressed.Glyph}" />
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
												<Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
											</MultiDataTrigger.Conditions>
											<Setter
												TargetName="ArrowRight"
												Property="Fill"
												Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
												<Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
											</MultiDataTrigger.Conditions>
											<Setter
												TargetName="ArrowLeft"
												Property="Fill"
												Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
										</MultiDataTrigger>
										<Trigger
											Property="IsEnabled"
											Value="False">
											<Setter
												TargetName="ArrowLeft"
												Property="Fill"
												Value="{StaticResource ScrollBar.Disabled.Glyph}" />
											<Setter
												TargetName="ArrowRight"
												Property="Fill"
												Value="{StaticResource ScrollBar.Disabled.Glyph}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type RadioButton}"
				x:Key="theme">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RadioButton}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="check">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="1.092" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="-0.125" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="1.144" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="0" />
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="uncheck">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.5"
												Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.5"
												Value="1.061">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.5"
												Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.5"
												Value="1.1">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.5"
												Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<ExponentialEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid>
								<Border
									Name="border"
									CornerRadius="8"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									Padding="0"
									Margin="-18,-13.95,-18,-19.05">
									<UIElement.Effect>
										<DropShadowEffect
											BlurRadius="16"
											ShadowDepth="0"
											Opacity="0.05" />
									</UIElement.Effect>
									<ContentPresenter
										Name="contentPresenter"
										Focusable="False"
										HorizontalAlignment="Stretch"
										Margin="0,1,-1,1"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="Stretch" />
								</Border>
								<Border
									Name="border1"
									BorderBrush="#FF3388C5"
									BorderThickness="2"
									HorizontalAlignment="Left"
									Height="100"
									Margin="-4,1.05,-20,-3.05"
									VerticalAlignment="Top"
									Width="149"
									CornerRadius="8"
									Opacity="0"
									RenderTransformOrigin="0.5,0.5">
									<UIElement.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</UIElement.RenderTransform>
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="uncheck_BeginStoryboard"
											Storyboard="{StaticResource uncheck}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
									</TriggerBase.EnterActions>
									<Setter
										TargetName="border"
										Property="FrameworkElement.Cursor"
										Value="Hand" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="settingstoggle">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource OptionMark.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource OptionMark.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="check">
										<ThicknessAnimationUsingKeyFrames
											Storyboard.TargetProperty="(FrameworkElement.Margin)"
											Storyboard.TargetName="ellipse">
											<EasingThicknessKeyFrame
												KeyTime="0:0:0.4"
												Value="27,5,0,0">
												<EasingThicknessKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(FrameworkElement.Width)"
											Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="14">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.4"
												Value="#FF5B92B9" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
											Storyboard.TargetName="ellipse">
											<EasingColorKeyFrame
												KeyTime="0:0:0.4"
												Value="#FF5B92B9" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="uncheck">
										<ThicknessAnimationUsingKeyFrames
											Storyboard.TargetProperty="(FrameworkElement.Margin)"
											Storyboard.TargetName="ellipse">
											<EasingThicknessKeyFrame
												KeyTime="0:0:0.4"
												Value="5,5,0,0">
												<EasingThicknessKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.4"
												Value="#FF395160">
												<EasingColorKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingColorKeyFrame.EasingFunction>
											</EasingColorKeyFrame>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
											Storyboard.TargetName="ellipse">
											<EasingColorKeyFrame
												KeyTime="0:0:0.4"
												Value="#FFA0C9E9">
												<EasingColorKeyFrame.EasingFunction>
													<PowerEase
														EasingMode="EaseInOut" />
												</EasingColorKeyFrame.EasingFunction>
											</EasingColorKeyFrame>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.7" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.7" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid
								Name="templateRoot"
								Background="#00FFFFFF"
								SnapsToDevicePixels="True">
								<Border
									Name="border1"
									BorderThickness="1"
									HorizontalAlignment="Stretch"
									Height="Auto"
									Margin="0"
									VerticalAlignment="Stretch"
									Width="Auto"
									CornerRadius="5"
									Background="#FF1E2931">
									<UIElement.Effect>
										<DropShadowEffect
											ShadowDepth="1"
											BlurRadius="8"
											Opacity="0.1" />
									</UIElement.Effect>
								</Border>
								<Border
									Name="checkBoxBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Visibility="Collapsed">
									<Grid
										Name="markGrid">
										<Path
											Name="optionMark"
											Data="F1 M9.97498,1.22334 L4.6983,9.09834 L4.52164,9.09834 L0,5.19331 L1.27664,3.52165 L4.255,6.08833 L8.33331,1.52588E-05 L9.97498,1.22334"
											Margin="1"
											Opacity="0"
											Stretch="None"
											Fill="{StaticResource OptionMark.Static.Glyph}" />
										<Rectangle
											Name="indeterminateMark"
											Margin="2"
											Opacity="0"
											Fill="{StaticResource OptionMark.Static.Glyph}" />
									</Grid>
								</Border>
								<ContentPresenter
									Name="contentPresenter"
									Grid.Column="0"
									Focusable="False"
									HorizontalAlignment="Stretch"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="Stretch" />
								<Grid
									Margin="0,23,25,24"
									HorizontalAlignment="Right"
									Width="46">
									<Border
										Name="border"
										BorderBrush="#FF395160"
										BorderThickness="2"
										HorizontalAlignment="Left"
										Height="24"
										Margin="0"
										VerticalAlignment="Top"
										Width="46"
										CornerRadius="12" />
									<Ellipse
										Name="ellipse"
										Fill="#FFA0C9E9"
										HorizontalAlignment="Left"
										Height="14"
										Margin="5,5,0,0"
										Stroke="#FF1E2931"
										VerticalAlignment="Top"
										Width="14"
										RenderTransformOrigin="0.5,0.5">
										<UIElement.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform />
												<TranslateTransform />
											</TransformGroup>
										</UIElement.RenderTransform>
									</Ellipse>
								</Grid>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsEnabled"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
										<BeginStoryboard
											Name="uncheck_BeginStoryboard1"
											Storyboard="{StaticResource uncheck}" />
									</TriggerBase.EnterActions>
								</Trigger>
								<Trigger
									Property="HasContent"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter
										Property="Padding"
										Value="4,-1,0,0" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="uncheck_BeginStoryboard"
											Storyboard="{StaticResource uncheck}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type RadioButton}"
				x:Key="tag">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource RadioButton.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource RadioButton.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RadioButton}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="check">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1A2B39" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="uncheck">
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="border">
											<EasingColorKeyFrame
												KeyTime="0:0:0.2"
												Value="#FF1D2830" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid
								Name="templateRoot"
								Background="#00FFFFFF"
								SnapsToDevicePixels="True">
								<Border
									Name="radioButtonBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									CornerRadius="100"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1,1,2,1"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Visibility="Collapsed">
									<Grid
										Name="markGrid"
										Margin="2">
										<Ellipse
											Name="optionMark"
											MinWidth="6"
											MinHeight="6"
											Opacity="0"
											Fill="{StaticResource RadioButton.Static.Glyph}" />
									</Grid>
								</Border>
								<Border
									Name="border"
									BorderThickness="1"
									HorizontalAlignment="Stretch"
									Height="31"
									VerticalAlignment="Top"
									Width="Auto"
									Background="#FF1D2830"
									CornerRadius="4" />
								<ContentPresenter
									Name="contentPresenter"
									Grid.Column="1"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="HasContent"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter
										Property="Padding"
										Value="4,-1,0,0" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF6DA5D3"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="uncheck_BeginStoryboard"
											Storyboard="{StaticResource uncheck}" />
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF698092"
													Duration="0:0:0.25"
													AutoReverse="False"
													RepeatBehavior="1x"
													Storyboard.TargetProperty="Foreground.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Storyboard
				x:Key="scriptdetails">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="25">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="script">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="-232">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="execution">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="-232">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.6"
						Value="260,45,0,0" />
					<EasingThicknessKeyFrame
						KeyTime="0:0:1"
						Value="68,45,0,0">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid3">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="0" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:1"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="scriptdetails">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.6"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="scriptdetailsback">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid3">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.5"
						Value="0" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:1"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="scripts">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.5"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="switchsettings">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="script">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="-211">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="execution">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="-211">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.7"
						Value="69,45,0,10">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="42">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="34">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="46">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="38" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.7"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
					Storyboard.TargetName="border2">
					<EasingColorKeyFrame
						KeyTime="0:0:0.7"
						Value="#FF1B252C" />
				</ColorAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="settings">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.4"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="switcheroo">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="189">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="switchthemes">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="script">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="-210">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
					Storyboard.TargetName="execution">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="-210">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ThicknessAnimationUsingKeyFrames
					Storyboard.TargetProperty="(FrameworkElement.Margin)"
					Storyboard.TargetName="tabControl">
					<EasingThicknessKeyFrame
						KeyTime="0:0:0.8"
						Value="69,45,0,10">
						<EasingThicknessKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingThicknessKeyFrame.EasingFunction>
					</EasingThicknessKeyFrame>
				</ThicknessAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="37">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="41">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid2">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="37">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="scrollViewer">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="32" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="grid1">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.8"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
					Storyboard.TargetName="border2">
					<EasingColorKeyFrame
						KeyTime="0:0:0.8"
						Value="#FF1B252C" />
				</ColorAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="themes">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.4"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
					Storyboard.TargetName="switcheroo">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.6"
						Value="129">
						<EasingDoubleKeyFrame.EasingFunction>
							<PowerEase
								EasingMode="EaseInOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="main">
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="configtab">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.1"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="ui">
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="uioptionstab">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.1"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="api">
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="apitab">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.1"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="fixes">
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="fixestab">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.1"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="langs">
				<BooleanAnimationUsingKeyFrames
					Storyboard.TargetProperty="(Selector.IsSelected)"
					Storyboard.TargetName="langtab">
					<DiscreteBooleanKeyFrame
						KeyTime="0:0:0.1"
						Value="True" />
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
			<SolidColorBrush
				Color="#1F26A0DA"
				x:Key="ComboBoxItem.ItemsviewHover.Background" />
			<SolidColorBrush
				Color="#A826A0DA"
				x:Key="ComboBoxItem.ItemsviewHover.Border" />
			<SolidColorBrush
				Color="#3D26A0DA"
				x:Key="ComboBoxItem.ItemsviewSelected.Background" />
			<SolidColorBrush
				Color="#FF26A0DA"
				x:Key="ComboBoxItem.ItemsviewSelected.Border" />
			<SolidColorBrush
				Color="#2E0080FF"
				x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" />
			<SolidColorBrush
				Color="#99006CD9"
				x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" />
			<SolidColorBrush
				Color="#3DDADADA"
				x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" />
			<SolidColorBrush
				Color="#FFDADADA"
				x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" />
			<SolidColorBrush
				Color="#FF26A0DA"
				x:Key="ComboBoxItem.ItemsviewFocus.Border" />
			<SolidColorBrush
				Color="#5426A0DA"
				x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" />
			<SolidColorBrush
				Color="#FF26A0DA"
				x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" />
			<Style
				TargetType="{x:Type Button}"
				x:Key="flatbutton">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="enter">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="leave">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.3"
												Value="0.7" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Border
								Name="border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Opacity="0.7" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="False">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="leave_BeginStoryboard"
											Storyboard="{StaticResource leave}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource enter}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ComboBoxItem}"
				x:Key="comboitem">
				<Setter
					Property="UIElement.SnapsToDevicePixels"
					Value="True" />
				<Setter
					Property="Padding"
					Value="4,1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="VerticalContentAlignment"
					Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ComboBoxItem}">
							<Border
								Name="Bd"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
								<ContentPresenter
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="Bd"
										Value="{DynamicResource SystemColors.GrayTextBrushKey}"
										Property="Foreground" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="False" />
										<Condition
											Property="UIElement.IsMouseOver"
											Value="True" />
										<Condition
											Property="UIElement.IsKeyboardFocused"
											Value="False" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
										<Condition
											Property="UIElement.IsMouseOver"
											Value="False" />
										<Condition
											Property="UIElement.IsKeyboardFocused"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
										<Condition
											Property="UIElement.IsMouseOver"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
										<Condition
											Property="UIElement.IsMouseOver"
											Value="False" />
										<Condition
											Property="UIElement.IsKeyboardFocused"
											Value="False" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="#FF20323E" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="#FF2C6E9C" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="False" />
										<Condition
											Property="UIElement.IsMouseOver"
											Value="False" />
										<Condition
											Property="UIElement.IsKeyboardFocused"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="False" />
										<Condition
											Property="UIElement.IsMouseOver"
											Value="True" />
										<Condition
											Property="UIElement.IsKeyboardFocused"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="checkboxbutton">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource OptionMark.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource OptionMark.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="check">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="uncheck">
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.7" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame
												KeyTime="0:0:0.4"
												Value="0.7" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Grid
								Name="templateRoot"
								Background="#00FFFFFF"
								SnapsToDevicePixels="True">
								<Border
									Name="border1"
									BorderThickness="1"
									HorizontalAlignment="Stretch"
									Height="Auto"
									Margin="0"
									VerticalAlignment="Stretch"
									Width="Auto"
									CornerRadius="5"
									Background="#FF1E2931">
									<UIElement.Effect>
										<DropShadowEffect
											ShadowDepth="1"
											BlurRadius="8"
											Opacity="0.1" />
									</UIElement.Effect>
								</Border>
								<Border
									Name="checkBoxBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Visibility="Collapsed">
									<Grid
										Name="markGrid">
										<Path
											Name="optionMark"
											Data="F1 M9.97498,1.22334 L4.6983,9.09834 L4.52164,9.09834 L0,5.19331 L1.27664,3.52165 L4.255,6.08833 L8.33331,1.52588E-05 L9.97498,1.22334"
											Margin="1"
											Opacity="0"
											Stretch="None"
											Fill="{StaticResource OptionMark.Static.Glyph}" />
										<Rectangle
											Name="indeterminateMark"
											Margin="2"
											Opacity="0"
											Fill="{StaticResource OptionMark.Static.Glyph}" />
									</Grid>
								</Border>
								<ContentPresenter
									Name="contentPresenter"
									Grid.Column="0"
									Focusable="False"
									HorizontalAlignment="Stretch"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="Stretch" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsEnabled"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
										<BeginStoryboard
											Name="uncheck_BeginStoryboard1"
											Storyboard="{StaticResource uncheck}" />
									</TriggerBase.EnterActions>
								</Trigger>
								<Trigger
									Property="HasContent"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter
										Property="Padding"
										Value="4,-1,0,0" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="uncheck_BeginStoryboard"
											Storyboard="{StaticResource uncheck}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource check}" />
									</TriggerBase.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				TargetType="{x:Type Window}"
				x:Key="WindowTemplateKey">
				<Border
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					Background="{TemplateBinding Background}">
					<Grid>
						<AdornerDecorator>
							<ContentPresenter />
						</AdornerDecorator>
						<ResizeGrip
							Name="WindowResizeGrip"
							HorizontalAlignment="Right"
							IsTabStop="False"
							Visibility="Collapsed"
							VerticalAlignment="Bottom" />
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="Window.ResizeMode"
								Value="CanResizeWithGrip" />
							<Condition
								Property="Window.WindowState"
								Value="Normal" />
						</MultiTrigger.Conditions>
						<Setter
							TargetName="WindowResizeGrip"
							Property="Visibility"
							Value="Visible" />
					</MultiTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<Style
				TargetType="{x:Type Window}"
				x:Key="WindowStyle1">
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.WindowTextBrushKey}" />
				<Setter
					Property="Background"
					Value="{DynamicResource SystemColors.WindowBrushKey}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Window}">
							<Border
								CornerRadius="10"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}">
								<AdornerDecorator>
									<ContentPresenter />
								</AdornerDecorator>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="Window.ResizeMode"
						Value="CanResizeWithGrip">
						<Setter
							Property="Template"
							Value="{StaticResource WindowTemplateKey}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Storyboard
				x:Key="show_eula">
				<ObjectAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Visibility)"
					Storyboard.TargetName="modals">
					<DiscreteObjectKeyFrame
						KeyTime="0"
						Value="{x:Static Visibility.Visible}" />
				</ObjectAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="eula">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<CircleEase
								EasingMode="EaseOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.RenderingBias)"
					Storyboard.TargetName="content">
					<DiscreteObjectKeyFrame
						KeyTime="0:0:0.4"
						Value="{x:Static RenderingBias.Quality}" />
				</ObjectAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.KernelType)"
					Storyboard.TargetName="content">
					<DiscreteObjectKeyFrame
						KeyTime="0:0:0.4"
						Value="{x:Static KernelType.Gaussian}" />
				</ObjectAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
					Storyboard.TargetName="content">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="5" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="hide_eula">
				<ObjectAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Visibility)"
					Storyboard.TargetName="modals">
					<DiscreteObjectKeyFrame
						KeyTime="0"
						Value="{x:Static Visibility.Hidden}" />
				</ObjectAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="eula">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<CircleEase
								EasingMode="EaseOut" />
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.RenderingBias)"
					Storyboard.TargetName="content">
					<DiscreteObjectKeyFrame
						KeyTime="0:0:0.4"
						Value="{x:Static RenderingBias.Quality}" />
				</ObjectAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.KernelType)"
					Storyboard.TargetName="content">
					<DiscreteObjectKeyFrame
						KeyTime="0:0:0.4"
						Value="{x:Static KernelType.Gaussian}" />
				</ObjectAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
					Storyboard.TargetName="content">
					<EasingDoubleKeyFrame
						KeyTime="0:0:0.4"
						Value="0" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<SolidColorBrush
				Color="#FF06B025"
				x:Key="ProgressBar.Progress" />
			<SolidColorBrush
				Color="#FFE6E6E6"
				x:Key="ProgressBar.Background" />
			<SolidColorBrush
				Color="#FFBCBCBC"
				x:Key="ProgressBar.Border" />
			<Style
				TargetType="{x:Type ProgressBar}"
				x:Key="ProgressBarStyle1">
				<Setter
					Property="Foreground"
					Value="{StaticResource ProgressBar.Progress}" />
				<Setter
					Property="Background"
					Value="{StaticResource ProgressBar.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource ProgressBar.Border}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ProgressBar}">
							<Grid
								Name="TemplateRoot">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup
										x:Name="CommonStates">
										<VisualState
											x:Name="Determinate" />
										<VisualState
											x:Name="Indeterminate">
											<Storyboard
												RepeatBehavior="Forever">
												<DoubleAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
													Storyboard.TargetName="Animation">
													<EasingDoubleKeyFrame
														KeyTime="0"
														Value="0.25" />
													<EasingDoubleKeyFrame
														KeyTime="0:0:1"
														Value="0.25" />
													<EasingDoubleKeyFrame
														KeyTime="0:0:2"
														Value="0.25" />
												</DoubleAnimationUsingKeyFrames>
												<PointAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
													Storyboard.TargetName="Animation">
													<EasingPointKeyFrame
														KeyTime="0"
														Value="-0.5,0.5" />
													<EasingPointKeyFrame
														KeyTime="0:0:1"
														Value="0.5,0.5" />
													<EasingPointKeyFrame
														KeyTime="0:0:2"
														Value="1.5,0.5" />
												</PointAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border
									CornerRadius="3"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}" />
								<Rectangle
									Name="PART_Track"
									RadiusX="3"
									RadiusY="3" />
								<Grid
									Name="PART_Indicator"
									ClipToBounds="True"
									HorizontalAlignment="Left">
									<Rectangle
										Name="Indicator"
										RadiusX="3"
										RadiusY="3"
										Fill="{TemplateBinding Foreground}" />
									<Rectangle
										Name="Animation"
										RadiusX="3"
										RadiusY="3"
										Fill="{TemplateBinding Foreground}"
										RenderTransformOrigin="0.5,0.5">
										<UIElement.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform />
												<TranslateTransform />
											</TransformGroup>
										</UIElement.RenderTransform>
									</Rectangle>
								</Grid>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ProgressBar.Orientation"
									Value="Vertical">
									<Setter
										TargetName="TemplateRoot"
										Property="FrameworkElement.LayoutTransform">
										<Setter.Value>
											<RotateTransform
												Angle="-90" />
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger
									Property="ProgressBar.IsIndeterminate"
									Value="True">
									<Setter
										TargetName="Indicator"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<FrameworkElement.Triggers>
		<EventTrigger
			RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard
				Storyboard="{StaticResource switchhome}" />
			<BeginStoryboard
				Name="main_BeginStoryboard"
				Storyboard="{StaticResource main}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="checkBox">
			<BeginStoryboard
				Name="hidebar_BeginStoryboard1"
				Storyboard="{StaticResource hidebar}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Unchecked"
			SourceName="checkBox">
			<BeginStoryboard
				Name="showsidebar_BeginStoryboard1"
				Storyboard="{StaticResource showsidebar}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="checkBox1">
			<BeginStoryboard
				Name="showsidebar_BeginStoryboard2"
				Storyboard="{StaticResource showsidebar}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Unchecked"
			SourceName="checkBox1">
			<BeginStoryboard
				Name="hidebar_BeginStoryboard2"
				Storyboard="{StaticResource hidebar}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="home">
			<BeginStoryboard
				Storyboard="{StaticResource switchhome}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="cloud">
			<BeginStoryboard
				Name="switchthemes_BeginStoryboard1"
				Storyboard="{StaticResource switchcloud}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="config">
			<BeginStoryboard
				Name="switchthemes_BeginStoryboard3"
				Storyboard="{StaticResource switchsettings}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="theme">
			<BeginStoryboard
				Name="switchthemes_BeginStoryboard2"
				Storyboard="{StaticResource switchthemes}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="radioButton">
			<BeginStoryboard
				Name="main_BeginStoryboard1"
				Storyboard="{StaticResource main}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="radioButton1">
			<BeginStoryboard
				Name="ui_BeginStoryboard1"
				Storyboard="{StaticResource ui}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="radioButton2">
			<BeginStoryboard
				Name="api_BeginStoryboard1"
				Storyboard="{StaticResource api}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="radioButton3">
			<BeginStoryboard
				Name="fixes_BeginStoryboard1"
				Storyboard="{StaticResource fixes}" />
		</EventTrigger>
		<EventTrigger
			RoutedEvent="ToggleButton.Checked"
			SourceName="radioButton4">
			<BeginStoryboard
				Name="langs_BeginStoryboard1"
				Storyboard="{StaticResource langs}" />
		</EventTrigger>
	</FrameworkElement.Triggers>
	<WindowChrome.WindowChrome>
		<WindowChrome
			CaptionHeight="0"
			ResizeBorderThickness="2" />
	</WindowChrome.WindowChrome>
	<Grid>
		<Grid
			Name="content">
			<UIElement.Effect>
				<BlurEffect
					Radius="0" />
			</UIElement.Effect>
			<Grid
				Name="Overlay"
				ZIndex="1000"
				Visibility="Hidden">
				<Image
					Name="img_theme"
					IsEnabled="False"
					IsHitTestVisible="False"
					Source="Assets/Imgs/starryblues.png"
					Stretch="Fill"
					Opacity="0.35" />
			</Grid>
			<Border
				Name="border2"
				CornerRadius="8 0 10 0"
				BorderThickness="1"
				Margin="65,45,0,0"
				Background="#FF172026" />
			<TabControl
				Name="tabControl"
				Margin="260,45,0,10"
				Background="{x:Null}"
				BorderBrush="{x:Null}">
				<TabItem
					Name="scriptdetails"
					Width="0"
					Height="0">
					<Grid
						Name="grid3"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
						<Border
							RenderOptions.BitmapScalingMode="HighQuality"
							BorderBrush="#FF000000"
							BorderThickness="1"
							Margin="40,40,0,0"
							CornerRadius="7"
							HorizontalAlignment="Left"
							Width="200.333"
							Height="135"
							VerticalAlignment="Top">
							<Border.Background>
								<ImageBrush
									x:Name="details_brssush"
									ImageSource="Assets/Imgs/owo.png"
									Stretch="UniformToFill" />
							</Border.Background>
						</Border>
						<Border
							RenderOptions.BitmapScalingMode="HighQuality"
							BorderBrush="#FF000000"
							BorderThickness="1"
							Margin="40,40,0,0"
							CornerRadius="7"
							HorizontalAlignment="Left"
							Width="200.333"
							Height="135"
							VerticalAlignment="Top">
							<Border.Background>
								<ImageBrush
									x:Name="details_brush"
									ImageSource="Assets/Imgs/owo.png"
									Stretch="UniformToFill" />
							</Border.Background>
						</Border>
						<TextBlock
							Name="script_title"
							HorizontalAlignment="Left"
							Height="30"
							Margin="255,33,0,0"
							TextWrapping="Wrap"
							Text="Loading Script..."
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="20"
							Foreground="#FFB1CADA" />
						<TextBlock
							HorizontalAlignment="Left"
							Height="19"
							Margin="254.833,68,0,0"
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
							FontSize="13"
							Foreground="#FF495D6A">
							<Run
								Foreground="#FF5B7E95"
								Text="Uploaded by: " />
							<Run
								Name="author_text"
								Foreground="#FF4B8AB4"
								Text="Loading..." />
						</TextBlock>
						<Border
							BorderThickness="1"
							Height="30"
							Margin="254.832,98,0,0"
							VerticalAlignment="Top"
							Background="#FF212D34"
							CornerRadius="4"
							HorizontalAlignment="Left">
							<TextBlock
								Name="game_title"
								Height="19"
								TextWrapping="Wrap"
								VerticalAlignment="Top"
								FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
								Foreground="#FF748EA0"
								Margin="8,5,8,0"
								Text="Loading Game..." />
						</Border>
						<Button
							Name="execute_again_button"
							Content="Execute"
							HorizontalAlignment="Left"
							Height="27"
							Margin="254.832,144,0,0"
							VerticalAlignment="Top"
							Width="71.514"
							Background="#FF1E2931"
							BorderBrush="#FF2C6E9C"
							Style="{DynamicResource execute}"
							BorderThickness="1.5"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							Foreground="#FF54A1D8"
							Click="execute_again_button_Click" />
						<Grid
							Margin="342.306,144,76.487,233">
							<CheckBox
								Name="button_Copy3"
								HorizontalAlignment="Left"
								Height="29"
								VerticalAlignment="Top"
								Width="28"
								Style="{DynamicResource likes}"
								Background="#FF2C3B45"
								Foreground="#FF6A8A9F"
								BorderBrush="{x:Null}"
								Checked="button_Copy3_Checked"
								Unchecked="button_Copy3_Unchecked">
								<Path
									Data="M9.23439,0.448408 C8.51529,-0.263043 7.35159,0.119457 7.04649,0.949907 C6.79449,1.63501 6.46689,2.45611 6.14829,3.06046 C5.19429,4.86756 4.63809,5.89521 3.10269,7.18211 C2.87765,7.36104 2.62159,7.50195 2.34579,7.59861 C1.32879,7.97771 0.374793,8.97221 0.624093,10.1529 L0.941793,11.6531 C1.02371,12.0402 1.21816,12.398 1.50334,12.6866 C1.78852,12.9752 2.15316,13.183 2.55639,13.2868 L7.59639,14.5848 C8.13788,14.724 8.7041,14.7555 9.25915,14.6772 C9.8142,14.5989 10.346,14.4125 10.8207,14.1298 C11.2954,13.8471 11.7028,13.4743 12.0169,13.0351 C12.331,12.5959 12.545,12.0998 12.6454,11.5783 L13.2619,8.38146 C13.3327,8.01393 13.3171,7.6362 13.2163,7.27498 C13.1155,6.91375 12.9318,6.57787 12.6784,6.29107 C12.425,6.00427 12.1079,5.77356 11.7496,5.61527 C11.3913,5.45697 11.0006,5.37495 10.6051,5.37501 L9.81039,5.37501 L9.81939,5.33081 C9.89139,4.98316 9.97779,4.50631 10.0354,3.98526 C10.0939,3.46676 10.1254,2.89301 10.0795,2.35921 C10.0345,1.83561 9.91389,1.29756 9.62589,0.888707 C9.50827,0.732143 9.37734,0.584889 9.23439,0.448408"
									Height="13"
									Stretch="Fill"
									Width="12"
									Fill="{Binding Foreground, ElementName=button_Copy3}" />
							</CheckBox>
							<TextBlock
								Name="like_count"
								HorizontalAlignment="Left"
								Margin="33,7,0,0"
								TextWrapping="Wrap"
								Text="0"
								VerticalAlignment="Top"
								FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
								FontWeight="Bold"
								Foreground="#FF7CA2BC"
								RenderTransformOrigin="0.562,0.444"
								FontSize="11"
								Width="23.207" />
						</Grid>
						<Grid
							Margin="406.513,144,10,233">
							<CheckBox
								Name="button_Copy4"
								HorizontalAlignment="Left"
								Height="29"
								VerticalAlignment="Top"
								Width="28"
								Style="{DynamicResource likes}"
								Background="#FF2C3B45"
								Foreground="#FF6A8A9F"
								IsEnabled="False"
								BorderBrush="{x:Null}">
								<Path
									Data="M9.23439,0.448408 C8.51529,-0.263043 7.35159,0.119457 7.04649,0.949907 C6.79449,1.63501 6.46689,2.45611 6.14829,3.06046 C5.19429,4.86756 4.63809,5.89521 3.10269,7.18211 C2.87765,7.36104 2.62159,7.50195 2.34579,7.59861 C1.32879,7.97771 0.374793,8.97221 0.624093,10.1529 L0.941793,11.6531 C1.02371,12.0402 1.21816,12.398 1.50334,12.6866 C1.78852,12.9752 2.15316,13.183 2.55639,13.2868 L7.59639,14.5848 C8.13788,14.724 8.7041,14.7555 9.25915,14.6772 C9.8142,14.5989 10.346,14.4125 10.8207,14.1298 C11.2954,13.8471 11.7028,13.4743 12.0169,13.0351 C12.331,12.5959 12.545,12.0998 12.6454,11.5783 L13.2619,8.38146 C13.3327,8.01393 13.3171,7.6362 13.2163,7.27498 C13.1155,6.91375 12.9318,6.57787 12.6784,6.29107 C12.425,6.00427 12.1079,5.77356 11.7496,5.61527 C11.3913,5.45697 11.0006,5.37495 10.6051,5.37501 L9.81039,5.37501 L9.81939,5.33081 C9.89139,4.98316 9.97779,4.50631 10.0354,3.98526 C10.0939,3.46676 10.1254,2.89301 10.0795,2.35921 C10.0345,1.83561 9.91389,1.29756 9.62589,0.888707 C9.50827,0.732143 9.37734,0.584889 9.23439,0.448408"
									Height="13"
									Stretch="Fill"
									Width="12"
									RenderTransformOrigin="0.5,0.5"
									Fill="{Binding Foreground, ElementName=button_Copy4}">
									<UIElement.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform
												Angle="176.732" />
											<TranslateTransform />
										</TransformGroup>
									</UIElement.RenderTransform>
								</Path>
							</CheckBox>
							<TextBlock
								Name="dislike_count"
								HorizontalAlignment="Left"
								Margin="33,5.5,0,0"
								TextWrapping="Wrap"
								Text="0"
								VerticalAlignment="Top"
								FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
								FontWeight="Bold"
								Foreground="#FF7CA2BC"
								RenderTransformOrigin="0.562,0.444"
								FontSize="11"
								Width="25.487" />
						</Grid>
						<Border
							BorderThickness="1"
							Margin="40,190,30,19"
							CornerRadius="5"
							Background="#FF1C272E">
							<Grid>
								<Path
									Data="M10.59,0.59 C10.21,0.21 9.7,0 9.17,0 L2,0 C0.9,0 0,0.9 0,2 L0,18 C0,19.1 0.89,20 1.99,20 L14,20 C15.1,20 16,19.1 16,18 L16,6.83 C16,6.3 15.79,5.79 15.41,5.42 L10.59,0.59 M11,16 L5,16 C4.45,16 4,15.55 4,15 C4,14.45 4.45,14 5,14 L11,14 C11.55,14 12,14.45 12,15 C12,15.55 11.55,16 11,16 M11,12 L5,12 C4.45,12 4,11.55 4,11 C4,10.45 4.45,10 5,10 L11,10 C11.55,10 12,10.45 12,11 C12,11.55 11.55,12 11,12 M9,6 L9,1.5 L14.5,7 L10,7 C9.45,7 9,6.55 9,6"
									Fill="#FF8BA6B8"
									HorizontalAlignment="Left"
									Height="14"
									Margin="21,18.312,0,0"
									Stretch="Fill"
									VerticalAlignment="Top"
									Width="11" />
								<TextBlock
									Name="desctxt"
									Height="19"
									TextWrapping="Wrap"
									VerticalAlignment="Top"
									FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
									Foreground="#FF8BA6B8"
									Margin="42,16.125,0,0"
									Text="Description:"
									FontSize="13"
									Width="86"
									HorizontalAlignment="Left" />
								<ScrollViewer
									VerticalScrollBarVisibility="Auto"
									HorizontalScrollBarVisibility="Disabled"
									Margin="0,52,0,0">
									<TextBlock
										Name="description_text"
										TextWrapping="Wrap"
										FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
										Foreground="#FF748EA0"
										Margin="19,0,24,0"
										Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore "
										FontSize="11" />
								</ScrollViewer>
								<Button
									HorizontalAlignment="Right"
									Height="29"
									Margin="0,10,10,0"
									VerticalAlignment="Top"
									Width="27.667"
									Style="{DynamicResource flatbutton}"
									Cursor="Hand"
									BorderBrush="{x:Null}"
									Click="Button_Click_11">
									<Control.Background>
										<SolidColorBrush
											Color="Black"
											Opacity="0.0025" />
									</Control.Background>
									<Grid
										Height="25"
										Width="32">
										<Path
											Data="M16,16 L2,16 L2,2 L7,2 L7,0 L2,0 C1.46957,0 0.960859,0.210714 0.585786,0.585786 C0.210714,0.960859 0,1.46957 0,2 L0,16 C0,16.5304 0.210714,17.0391 0.585786,17.4142 C0.960859,17.7893 1.46957,18 2,18 L16,18 C16.5304,18 17.0391,17.7893 17.4142,17.4142 C17.7893,17.0391 18,16.5304 18,16 L18,11 L16,11 L16,16"
											Fill="#FF8BA6B8"
											HorizontalAlignment="Left"
											Height="12.625"
											Margin="5.625,6.07,0,0"
											Stretch="Fill"
											VerticalAlignment="Top"
											Width="12.375" />
										<Path
											Data="M9.99961,0 L13.2996,3.3 L7.59961,9 L8.99961,10.4 L14.6996,4.7 L17.9996,8 L17.9996,0 L9.99961,0"
											Fill="#FF8BA6B8"
											HorizontalAlignment="Left"
											Height="7.18"
											Margin="11.375,6.07,0,0"
											Stretch="Fill"
											VerticalAlignment="Top"
											Width="6.625" />
									</Grid>
								</Button>
							</Grid>
						</Border>
						<Button
							Name="button1"
							HorizontalAlignment="Left"
							Height="34"
							Margin="34,1,0,0"
							VerticalAlignment="Top"
							Width="78"
							Style="{DynamicResource flatbutton}"
							Cursor="Hand"
							BorderBrush="{x:Null}"
							Click="button1_Click">
							<Control.Background>
								<SolidColorBrush
									Color="Black"
									Opacity="0.0025" />
							</Control.Background>
							<Grid
								Height="25"
								Width="70">
								<Grid
									Margin="4.897,7,54.5,7.062">
									<Path
										Data="M12.167,17.9375 L8.4794998,12.9995 L12.57285,7.8120007"
										HorizontalAlignment="Left"
										Height="10.938"
										Stretch="Fill"
										VerticalAlignment="Top"
										Width="6.656"
										Stroke="#FF8BA6B8"
										StrokeThickness="1.4" />
								</Grid>
								<TextBlock
									HorizontalAlignment="Left"
									Height="14.667"
									Margin="21.167,3.638,0,0"
									TextWrapping="Wrap"
									Text="Return"
									VerticalAlignment="Top"
									Width="44"
									FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
									Foreground="#FF8BA6B8" />
							</Grid>
						</Button>
					</Grid>
				</TabItem>
				<TabItem
					Name="settings"
					Width="0"
					Height="0">
					<Grid
						Name="grid2"
						Margin="-4,-7,0,0"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
						<TabControl
							Name="options"
							Margin="26,62,17,0"
							Background="{x:Null}"
							BorderBrush="{x:Null}">
							<TabItem
								Name="configtab"
								Width="0"
								Height="0">
								<StackPanel
									Name="configsection"
									Orientation="Vertical"
									Margin="0">
									<CheckBox
										Name="autoexec"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="autoexec_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header1"
												Text="Auto Execute"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,438,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy1"
												Text="This automatically executes all scripts you want everytime you inject/serverhop"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="fpsunlocker"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="autoupdate_Copy_Checked"
										Unchecked="autoupdate_Copy_Unchecked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5"
											ContextMenuClosing="Grid_ContextMenuClosing">
											<TextBlock
												Name="header2"
												Text="FPS Unlocker"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,423,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy2"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20">
												<Run
													Text="Unlock your frames" />
												<Run
													Text=" per second" />
												<Run
													Text=" to get a much more enhanced experience" />
												<Run
													Text=" " />
												<Run
													Text="on Roblox" />
											</TextBlock>
										</Grid>
									</CheckBox>
									<CheckBox
										Name="autoexec_Copy"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource checkboxbutton}"
										Checked="autoexec_Copy_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<Grid.RowDefinitions>
												<RowDefinition
													Height="5*" />
												<RowDefinition
													Height="24*" />
											</Grid.RowDefinitions>
											<TextBlock
												Name="header3"
												Text="Kill Roblox"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,365,28"
												Foreground="#FFD0E5FF"
												Grid.RowSpan="2" />
											<TextBlock
												Name="header_Copy3"
												Text="This kills/closes all currently running Roblox processes"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,20.5,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20"
												Grid.Row="1" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="opendllfolder"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource checkboxbutton}"
										Margin="0,0,0,4"
										Checked="opendllfolder_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header9"
												Text="Open DLL Folder"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,423,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy10"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20">
												<Run
													Text="This opens Delta's DLL Folder, that includes" />
												<Run
													Text=" the" />
												<Run
													Text=" workspace, logs and autoexec folder " />
											</TextBlock>
										</Grid>
									</CheckBox>
								</StackPanel>
							</TabItem>
							<TabItem
								Name="uioptionstab"
								Width="0"
								Height="0">
								<StackPanel
									Name="uisettings"
									Orientation="Vertical"
									Margin="0">
									<CheckBox
										Name="opacity"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="opacity_Checked"
										Unchecked="opacity_Unchecked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header4"
												Text="Opacity"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,0,0"
												Foreground="#FFD0E5FF"
												HorizontalAlignment="Left"
												Width="157"
												Height="20"
												VerticalAlignment="Top" />
											<TextBlock
												Name="header_Copy5"
												Text="Makes Delta transparent by lowering the window opacity"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,0,0"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20"
												HorizontalAlignment="Left"
												Width="480"
												VerticalAlignment="Top" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="topmost"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="topmost_Checked"
										Unchecked="topmost_Unchecked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header5"
												Text="TopMost"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,0,0"
												Foreground="#FFD0E5FF"
												HorizontalAlignment="Left"
												Width="120"
												Height="20"
												VerticalAlignment="Top" />
											<TextBlock
												Name="header_Copy6"
												Text="Makes the Delta UI stay focused on top of your other windows"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,0,0"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20"
												HorizontalAlignment="Left"
												Width="480"
												VerticalAlignment="Top" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="autofade"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header6"
												Text="Auto Fade"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,0,0"
												Foreground="#FFD0E5FF"
												HorizontalAlignment="Left"
												Width="136"
												Height="20"
												VerticalAlignment="Top" />
											<TextBlock
												Name="header_Copy7"
												Text="Automatically lower opacity upon window focus being lost"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,0,0"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20"
												HorizontalAlignment="Left"
												Width="480"
												VerticalAlignment="Top" />
										</Grid>
									</CheckBox>
								</StackPanel>
							</TabItem>
							<TabItem
								Name="langtab"
								Width="0"
								Margin="215,0,-215,0">
								<ScrollViewer>
									<StackPanel
										Name="etc1"
										Orientation="Vertical"
										Margin="0">
										<CheckBox
											Name="eng_eng"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="autoupdate1_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													Name="header10"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,476,28"
													Foreground="#FFD0E5FF">
													<Run
														Text="English" />
													<Run
														Text=" - English" />
												</TextBlock>
												<TextBlock
													Name="header_Copy11"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20">
													<Run
														Text="Select" />
													<Run
														Text=" English" />
													<Run
														Text=" as" />
													<Run
														Text=" language" />
													<Run
														Text="!" />
												</TextBlock>
											</Grid>
										</CheckBox>
										<CheckBox
											Name="fil_pil"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="fil_pil_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Filipino " />
													<Run
														Text="- " />
													<Run
														Text="P" />
													<Run
														Text="ilipino (Tagalog)" />
												</TextBlock>
												<TextBlock
													Name="header_Copy19"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20"
													Text="Piliin ang Filipino bilang wika!" />
											</Grid>
										</CheckBox>
										<CheckBox
											Name="spa_esp"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="spa_esp_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Spanish " />
													<Run
														Text="- " />
													<Run
														Text="E" />
													<Run
														Text="spañol" />
												</TextBlock>
												<TextBlock
													Name="header_Copy16"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20"
													Text="¡Seleccione español como idioma!" />
											</Grid>
										</CheckBox>
										<CheckBox
											Name="tur_tur"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="ger_deutsch_Copy_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Turkish" />
													<Run
														Text=" - Türkçe" />
												</TextBlock>
												<TextBlock
													Name="header_Copy15"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20"
													Text="Dil olarak Türkçe'yi seçin!" />
											</Grid>
										</CheckBox>
										<CheckBox
											Name="ind_bah"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="ind_bah_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Indonesian " />
													<Run
														Text="- " />
													<Run
														Text="B" />
													<Run
														Text="ahasa Indonesia" />
												</TextBlock>
												<TextBlock
													Name="header_Copy17"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20"
													Text="Pilih bahasa Indonesia sebagai bahasa!" />
											</Grid>
										</CheckBox>
										<CheckBox
											Name="por_por"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="por_por_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Portuguese " />
													<Run
														Text="- " />
													<Run
														Text="Português" />
												</TextBlock>
												<TextBlock
													Name="header_Copy18"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20"
													Text="Selecione Português como idioma!!" />
											</Grid>
										</CheckBox>
										<CheckBox
											Name="pol_pol"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="pol_pol_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													Name="header15"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Polish" />
													<Run
														Text=" - Polska" />
												</TextBlock>
												<TextBlock
													Name="header_Copy23"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20">
													<Run
														Text="Wybierz język polski!" />
												</TextBlock>
											</Grid>
										</CheckBox>
										<CheckBox
											Name="fre_fra"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="fre_fra_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													Name="header16"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="French" />
													<Run
														Text=" - Français" />
												</TextBlock>
												<TextBlock
													Name="header_Copy24"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20">
													<Run
														Text="Sélectionnez le français comme langue!" />
												</TextBlock>
											</Grid>
										</CheckBox>
										<CheckBox
											Name="thai_thai"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="thai_thai_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													Name="header1456"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Thai" />
													<Run
														Text=" - ไทย" />
												</TextBlock>
												<TextBlock
													Name="header_Copggy24"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20">
													<Run
														Text="เลือกภาษาไทยเป็นภาษาไทย!" />
												</TextBlock>
											</Grid>
										</CheckBox>
										<CheckBox
											Name="ger_deutsch"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="ger_deutsch_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													Name="header11"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="German" />
													<Run
														Text=" - Deutsch" />
												</TextBlock>
												<TextBlock
													Name="header_Copy12"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20">
													<Run
														Text="Wähle Deutsch als " />
													<Run
														Text="S" />
													<Run
														Text="prache" />
													<Run
														Text="!" />
												</TextBlock>
											</Grid>
										</CheckBox>
										<CheckBox
											Name="fin_sou"
											Height="71"
											VerticalAlignment="Top"
											Style="{DynamicResource settingstoggle}"
											Margin="0,0,0,4"
											Checked="fin_sou_Checked">
											<Grid
												Height="57"
												Width="620"
												HorizontalAlignment="Left"
												Margin="0,7.5,-4,7.5">
												<TextBlock
													Name="header14"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													FontSize="13"
													Margin="18,9,0,28"
													Foreground="#FFD0E5FF"
													HorizontalAlignment="Left">
													<Run
														Text="Finnish" />
													<Run
														Text=" - Suomalainen" />
												</TextBlock>
												<TextBlock
													Name="header_Copy20"
													FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
													Margin="18,30,122,7"
													Foreground="#FF92AAC7"
													FontSize="11"
													Height="20">
													<Run
														Text="Valitse suomi kieleksi! " />
												</TextBlock>
											</Grid>
										</CheckBox>
									</StackPanel>
								</ScrollViewer>
							</TabItem>
							<TabItem
								Name="apitab"
								Width="0"
								Height="0">
								<StackPanel
									Name="apiselect"
									Orientation="Vertical"
									Margin="0">
									<CheckBox
										Name="delta"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="delta_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header12"
												Text="Delta API"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,443,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy13"
												Text="Use the powerful level 7 Delta API (recommended)"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="wrd"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="wrd_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header13"
												Text="WRD API"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,446,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy14"
												Text="Use the WeAreDevs API (level 7)"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="autoinj"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4"
										Checked="autoinj_Checked"
										Unchecked="autoinj_Unchecked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header8"
												Text="Auto Inject"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,387,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy9"
												Text="This automatically injects for you everytime you open roblox"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20" />
										</Grid>
									</CheckBox>
									<CheckBox
										Name="verscheck"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource settingstoggle}"
										Margin="0,0,0,4">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header7"
												Text="Version Checking"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,351,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy8"
												Text="Corrects the roblox version if its wrong (Could slow injection)"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20" />
										</Grid>
									</CheckBox>
								</StackPanel>
							</TabItem>
							<TabItem
								Name="fixestab"
								Width="0"
								Height="0">
								<StackPanel
									Name="etc"
									Orientation="Vertical"
									Margin="0">
									<CheckBox
										Name="autoupdate5"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource checkboxbutton}"
										Margin="0,0,0,4"
										Checked="autoupdate5_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header20"
												Text="Reinstall DLL"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,427,28"
												Foreground="#FFD0E5FF" />
											<TextBlock
												Name="header_Copy21"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20">
												<Run
													Text="This option reinstalls Delta's DLL/Module which runs " />
												<Run
													Text="scripts" />
											</TextBlock>
										</Grid>
									</CheckBox>
									<CheckBox
										Name="autoexec5"
										Height="71"
										VerticalAlignment="Top"
										Style="{DynamicResource checkboxbutton}"
										Margin="0,0,0,4"
										Checked="autoexec5_Checked">
										<Grid
											Height="57"
											Width="620"
											HorizontalAlignment="Left"
											Margin="0,7.5,-4,7.5">
											<TextBlock
												Name="header21"
												Text="Install Dependencies"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												FontSize="13"
												Margin="18,9,0,28"
												Foreground="#FFD0E5FF"
												HorizontalAlignment="Left" />
											<TextBlock
												Name="header_Copy22"
												Text="Reinstall VC Redist x64, x86 and DirectX automatically"
												FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
												Margin="18,30,122,7"
												Foreground="#FF92AAC7"
												FontSize="11"
												Height="20" />
										</Grid>
									</CheckBox>
								</StackPanel>
							</TabItem>
						</TabControl>
						<TextBlock
							Name="header_Copy4"
							Text="Configuration"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="17"
							Margin="35,23,0,364"
							Foreground="#FFD0E5FF"
							HorizontalAlignment="Left" />
						<RadioButton
							Name="radioButton"
							Content="Main"
							HorizontalAlignment="Left"
							Height="31"
							Margin="174,20,0,0"
							VerticalAlignment="Top"
							Width="58"
							Style="{DynamicResource tag}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="14"
							Padding="11,5,0,0"
							Foreground="#FF698092"
							IsChecked="True" />
						<RadioButton
							Name="radioButton1"
							Content="UI"
							HorizontalAlignment="Left"
							Height="31"
							Margin="237,20,0,0"
							VerticalAlignment="Top"
							Width="35"
							Style="{DynamicResource tag}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="14"
							Padding="11,5,0,0"
							Foreground="#FF698092" />
						<RadioButton
							Name="radioButton2"
							Content="API"
							HorizontalAlignment="Left"
							Height="31"
							Margin="277,20,0,0"
							VerticalAlignment="Top"
							Width="44"
							Style="{DynamicResource tag}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="14"
							Padding="11,5,0,0"
							Foreground="#FF698092"
							Checked="radioButton2_Checked" />
						<RadioButton
							Name="radioButton3"
							Content="Fixes"
							HorizontalAlignment="Left"
							Height="31"
							Margin="326,20,0,0"
							VerticalAlignment="Top"
							Width="55"
							Style="{DynamicResource tag}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="14"
							Padding="11,5,0,0"
							Foreground="#FF698092" />
						<RadioButton
							Name="radioButton4"
							Content="Langs"
							HorizontalAlignment="Left"
							Height="31"
							Margin="389,20,0,0"
							VerticalAlignment="Top"
							Width="63"
							Style="{DynamicResource tag}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="14"
							Padding="11,5,0,0"
							Foreground="#FF698092" />
						<Button
							Name="saveset"
							Content="Save Settings"
							HorizontalAlignment="Right"
							Height="32"
							Margin="0,19,21,0"
							VerticalAlignment="Top"
							Width="109"
							Background="#FF1E2931"
							BorderBrush="#FF2C6E9C"
							Style="{DynamicResource execute}"
							BorderThickness="1.5"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							Foreground="#FF54A1D8"
							Click="Button_Click_8" />
					</Grid>
				</TabItem>
				<TabItem
					Name="executor"
					Header="TabItem"
					Width="0"
					Height="0">
					<Grid
						Name="grid"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
						<Button
							Name="exec_btn"
							Content="EXECUTE"
							HorizontalAlignment="Left"
							Height="40"
							Margin="14,0,0,13"
							VerticalAlignment="Bottom"
							Width="86"
							Style="{DynamicResource Button}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="13"
							Foreground="#FF83B1D1"
							Click="Button_Click_6" />
						<Button
							Name="clr_btn"
							Content="CLEAR"
							HorizontalAlignment="Left"
							Height="40"
							Margin="107,0,0,13"
							VerticalAlignment="Bottom"
							Width="74"
							Style="{DynamicResource Button}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="13"
							Foreground="#FF83B1D1"
							Click="Button_Click_2" />
						<Button
							Name="opn_btn"
							Content="OPEN"
							HorizontalAlignment="Left"
							Height="40"
							Margin="189,0,0,13"
							VerticalAlignment="Bottom"
							Width="74"
							Style="{DynamicResource Button}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="13"
							Foreground="#FF83B1D1"
							Click="Button_Click_3" />
						<Button
							Name="sve_btn"
							Content="SAVE"
							HorizontalAlignment="Left"
							Height="40"
							Margin="270,0,0,13"
							VerticalAlignment="Bottom"
							Width="74"
							Style="{DynamicResource Button}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="13"
							Foreground="#FF83B1D1"
							Click="Button_Click_4" />
						<TabControl
							Name="tabControl1"
							Margin="0,0,0,58"
							BorderThickness="0,1,0,0"
							Style="{DynamicResource tabctrl}"
							Background="{x:Null}"
							BorderBrush="{x:Null}" />
						<Button
							Name="inj_btn"
							Content="INJECT"
							HorizontalAlignment="Right"
							Height="40"
							Margin="0,0,12,13"
							VerticalAlignment="Bottom"
							Width="74"
							Style="{DynamicResource Button}"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="13"
							Foreground="#FF83B1D1"
							Click="Button_Click_7" />
					</Grid>
				</TabItem>
				<TabItem
					Name="scripts"
					Header="TabItem"
					Width="0"
					Height="0"
					IsSelected="True">
					<Grid>
						<TextBlock
							Name="placeholdertext"
							TextWrapping="Wrap"
							Foreground="#FF627A8A"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
							Margin="0"
							TextAlignment="Center"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="324">
							<Run
								Text="We have over 4,000+ Scripts that you can search for! Start by doing a search :D" />
						</TextBlock>
						<ScrollViewer
							Name="scrollViewer"
							HorizontalScrollBarVisibility="Disabled"
							VerticalScrollBarVisibility="Auto"
							RenderTransformOrigin="0.5,0.5"
							Template="{DynamicResource scrollviewer}">
							<UIElement.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform />
									<TranslateTransform />
								</TransformGroup>
							</UIElement.RenderTransform>
							<WrapPanel
								Name="wrap_panel"
								Orientation="Horizontal"
								Margin="5,0,0,0" />
						</ScrollViewer>
					</Grid>
				</TabItem>
				<TabItem
					Name="themes"
					Header="themes"
					Width="0"
					Height="0">
					<Grid
						Name="grid1"
						Margin="0,-9.05,0,0"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
						<ScrollViewer
							Name="themeviewer"
							HorizontalScrollBarVisibility="Disabled"
							VerticalScrollBarVisibility="Auto"
							RenderTransformOrigin="0.5,0.5"
							Template="{DynamicResource scrollviewer}"
							Margin="6,105.95,0,0"
							Foreground="{x:Null}">
							<UIElement.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform />
									<TranslateTransform />
								</TransformGroup>
							</UIElement.RenderTransform>
							<WrapPanel
								Name="theme_wrap_panel"
								Orientation="Horizontal"
								Margin="0" />
						</ScrollViewer>
						<TextBlock
							Name="theme_title"
							HorizontalAlignment="Left"
							Height="25"
							Margin="32,24,0,0"
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontSize="16"
							Foreground="#FFD0E5FF">
							<Run
								Text="Select a " />
							<Run
								Text="T" />
							<Run
								Text="heme" />
							<Run
								Text="!" />
						</TextBlock>
						<TextBlock
							Name="theme_desc"
							HorizontalAlignment="Left"
							Height="25"
							Margin="32,61,0,0"
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
							Foreground="#FF8F9EB0"
							FontSize="11">
							<Run
								Text="Select a Theme to start! Apply it using the &quot;" />
							<Run
								Text="Use Theme" />
							<Run
								Text="&quot; Button" />
						</TextBlock>
						<Button
							Name="usetheme"
							Content="Use Theme"
							HorizontalAlignment="Right"
							Height="32"
							Margin="0,17,5,0"
							VerticalAlignment="Top"
							Width="97"
							Background="#FF1E2931"
							BorderBrush="#FF2C6E9C"
							Style="{DynamicResource execute}"
							BorderThickness="1.5"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							Foreground="#FF54A1D8"
							Click="Button_Click_9" />
						<Button
							Name="resettheme"
							Content="Reset Theme"
							HorizontalAlignment="Right"
							Height="32"
							Margin="0,17,107,0"
							VerticalAlignment="Top"
							Width="109"
							Background="#FF1E2931"
							BorderBrush="#FF2C6E9C"
							Style="{DynamicResource execute}"
							BorderThickness="1.5"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							Foreground="#FF54A1D8"
							Click="Button_Click_10" />
					</Grid>
				</TabItem>
			</TabControl>
			<Grid
				Name="script"
				Margin="66,38.3,420,0"
				RenderTransformOrigin="0.5,0.5">
				<UIElement.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform />
						<TranslateTransform />
					</TransformGroup>
				</UIElement.RenderTransform>
				<Border
					Name="border1"
					BorderThickness="0,0,1,0"
					HorizontalAlignment="Left"
					Width="195"
					CornerRadius="8,0,0,0"
					BorderBrush="#FF26333C"
					Background="#FF1B252C"
					RenderTransformOrigin="0.5,0.5">
					<UIElement.RenderTransform>
						<TransformGroup>
							<ScaleTransform />
							<SkewTransform />
							<RotateTransform />
							<TranslateTransform />
						</TransformGroup>
					</UIElement.RenderTransform>
				</Border>
				<Grid
					Margin="194,146,0,0"
					HorizontalAlignment="Left"
					Width="11"
					Height="62"
					VerticalAlignment="Top">
					<Path
						Data="M1.49999,1 C1.33333,2.83333 3.99999,8 16,14 C16.8,14.8 16.3333,50.6667 16,68.5 C11.5,70.1667 1.9,74.8 1.5,80"
						HorizontalAlignment="Left"
						Height="60"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="11"
						Fill="#FF1B252C" />
					<Border
						BorderBrush="#FF1B252C"
						BorderThickness="1"
						HorizontalAlignment="Left"
						Height="54.167"
						Margin="0,1.833,0,0"
						VerticalAlignment="Top"
						Width="1" />
					<Path
						Name="path2"
						Data="M1.49999,1 C1.33333,2.83333 3.99999,8 16,14 C16.8,14.8 16.3333,50.6667 16,68.5 C11.5,70.1667 1.9,74.8 1.5,80"
						HorizontalAlignment="Left"
						Height="60"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="11"
						Stroke="#FF26333C"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
					</Path>
					<Path
						Name="path3"
						Data="M4.2916667,27.75 L5.9996665,30.875 L4.0413331,33.5"
						HorizontalAlignment="Left"
						Height="7.99"
						Margin="-0.527,27.505,0,0"
						Stretch="Fill"
						Stroke="#FF7791A4"
						VerticalAlignment="Top"
						Width="3.97"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform
									Angle="-180.559" />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
					</Path>
					<CheckBox
						Name="checkBox1"
						Style="{DynamicResource emptycheckbox}" />
				</Grid>
				<TextBox
					Name="searchbox"
					HorizontalAlignment="Left"
					Height="35"
					Margin="12.25,20,0,0"
					TextWrapping="Wrap"
					VerticalAlignment="Top"
					Width="165"
					Style="{DynamicResource search}"
					BorderBrush="#FF2C3B45"
					Tag="Filter Items.."
					Text=""
					FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
					Padding="0,7,0,0"
					Foreground="#FF627A8A"
					BorderThickness="1.5"
					KeyDown="searchbox_KeyDown">
					<Control.Background>
						<LinearGradientBrush
							EndPoint="0.5,1"
							StartPoint="0.5,0">
							<GradientStop
								Color="#FF1F2931" />
							<GradientStop
								Color="#FF1B252C"
								Offset="1" />
						</LinearGradientBrush>
					</Control.Background>
				</TextBox>
				<ComboBox
					Name="search_filter_selection"
					HorizontalAlignment="Left"
					Height="30"
					Margin="12.25,60,0,0"
					VerticalAlignment="Top"
					Width="165"
					Style="{DynamicResource combobox}"
					FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
					Padding="11,6,5,3"
					Foreground="#FF7CA2BC"
					SelectionChanged="search_filter_selection_SelectionChanged">
					<ComboBoxItem
						Name="hot"
						Content="Hot"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Height="31"
						Padding="11,6,4,1"
						Foreground="#FF7CA2BC"
						IsSelected="True"
						Style="{DynamicResource comboitem}" />
					<ComboBoxItem
						Name="old"
						Content="Oldest"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Height="31"
						Padding="11,6,4,1"
						Foreground="#FF7CA2BC"
						Style="{DynamicResource comboitem}" />
					<ComboBoxItem
						Name="mostv"
						Content="Most Viewed"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Height="31"
						Padding="11,6,4,1"
						Foreground="#FF7CA2BC"
						Style="{DynamicResource comboitem}" />
					<ComboBoxItem
						Name="FAVS"
						Content="Favorites"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Height="31"
						Padding="11,6,4,1"
						Foreground="#FF7CA2BC"
						Style="{DynamicResource comboitem}" />
				</ComboBox>
				<Button
					HorizontalAlignment="Left"
					Height="29"
					Margin="12.25,95,0,0"
					VerticalAlignment="Top"
					Width="165"
					Background="#FF1B252C"
					BorderBrush="#FF2C6E9C"
					Style="{DynamicResource execute}"
					BorderThickness="1.5"
					FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
					Foreground="#FF54A1D8"
					FontSize="10"
					Click="Button_Click_5">
					<Grid
						Height="19"
						Width="160">
						<TextBlock
							Name="browse_lbl"
							HorizontalAlignment="Left"
							Margin="0,1,0,0"
							TextWrapping="Wrap"
							Text="Browse"
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							FontWeight="Bold"
							FontSize="12"
							Foreground="#FF83B1D1"
							TextAlignment="Center"
							Width="158" />
					</Grid>
				</Button>
			</Grid>
			<Grid
				Name="execution"
				Margin="66,38.3,420,0"
				RenderTransformOrigin="0.5,0.5">
				<UIElement.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform />
						<TranslateTransform />
					</TransformGroup>
				</UIElement.RenderTransform>
				<Border
					Name="border"
					BorderThickness="0,0,1,0"
					HorizontalAlignment="Left"
					Width="195"
					CornerRadius="8,0,0,0"
					BorderBrush="#FF26333C"
					Background="#FF1B252C" />
				<Grid
					Margin="194,146,0,0"
					HorizontalAlignment="Left"
					Width="11"
					Height="62"
					VerticalAlignment="Top">
					<Path
						Data="M1.49999,1 C1.33333,2.83333 3.99999,8 16,14 C16.8,14.8 16.3333,50.6667 16,68.5 C11.5,70.1667 1.9,74.8 1.5,80"
						HorizontalAlignment="Left"
						Height="60"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="11"
						Fill="#FF1B252C" />
					<Border
						BorderBrush="#FF1B252C"
						BorderThickness="1"
						HorizontalAlignment="Left"
						Height="54.167"
						Margin="0,1.833,0,0"
						VerticalAlignment="Top"
						Width="1" />
					<Path
						Name="path1"
						Data="M1.49999,1 C1.33333,2.83333 3.99999,8 16,14 C16.8,14.8 16.3333,50.6667 16,68.5 C11.5,70.1667 1.9,74.8 1.5,80"
						HorizontalAlignment="Left"
						Height="60"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="11"
						Stroke="#FF26333C" />
					<Path
						Name="path"
						Data="M4.2916667,27.75 L5.9996665,30.875 L4.0413331,33.5"
						HorizontalAlignment="Left"
						Height="7.99"
						Margin="-0.527,27.505,0,0"
						Stretch="Fill"
						Stroke="#FF7791A4"
						VerticalAlignment="Top"
						Width="3.97"
						RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform />
								<SkewTransform />
								<RotateTransform
									Angle="-180.559" />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
					</Path>
					<CheckBox
						Name="checkBox"
						Style="{DynamicResource emptycheckbox}" />
				</Grid>
				<TextBox
					Name="search_scripts_folder_box"
					Tag="Filter Items.."
					HorizontalAlignment="Left"
					Height="35"
					Margin="12.25,20,0,0"
					TextWrapping="Wrap"
					VerticalAlignment="Top"
					Width="165"
					Style="{DynamicResource search}"
					BorderBrush="#FF2C3B45"
					Text=""
					FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
					Padding="0,7,0,0"
					Foreground="#FF627A8A"
					BorderThickness="1.5"
					TextChanged="TextBox_TextChanged">
					<Control.Background>
						<LinearGradientBrush
							EndPoint="0.5,1"
							StartPoint="0.5,0">
							<GradientStop
								Color="#FF1F2931" />
							<GradientStop
								Color="#FF1B252C"
								Offset="1" />
						</LinearGradientBrush>
					</Control.Background>
				</TextBox>
				<RadioButton
					Name="txtselected"
					HorizontalAlignment="Left"
					Height="29"
					Margin="12.25,65,0,0"
					VerticalAlignment="Top"
					Width="40.333"
					Style="{DynamicResource category}"
					Content="TXT"
					FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
					Padding="10,5,0,0"
					Foreground="#FF627A8A"
					Checked="txtselected_Checked" />
				<RadioButton
					Name="luaselected"
					HorizontalAlignment="Left"
					Height="29"
					Margin="57.583,65,0,0"
					VerticalAlignment="Top"
					Width="40.417"
					Style="{DynamicResource category}"
					Content="LUA"
					FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
					Padding="10,5,0,0"
					Foreground="#FF627A8A"
					Checked="luaselected_Checked" />
				<RadioButton
					Name="allselected"
					HorizontalAlignment="Left"
					Height="29"
					Margin="103,65,0,0"
					VerticalAlignment="Top"
					Width="71.25"
					Style="{DynamicResource category}"
					Content="ALL FILES"
					FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
					Padding="10,5,0,0"
					Foreground="#FF627A8A"
					Checked="allselected_Checked" />
				<ListBox
					Name="lbol"
					HorizontalAlignment="Left"
					Margin="0,102,0,0"
					Width="186"
					Background="{x:Null}"
					BorderBrush="{x:Null}"
					SelectionChanged="lbol_SelectionChanged" />
			</Grid>
			<Border
				CornerRadius="10 0 0 10"
				BorderBrush="#FF171F25"
				BorderThickness="1"
				HorizontalAlignment="Left"
				Width="65"
				Background="#FF161F25"
				Height="Auto" />
			<Grid
				Name="switcheroo"
				Margin="0,64,0,0"
				RenderTransformOrigin="0.5,0.5"
				HorizontalAlignment="Left"
				Width="70"
				Height="86"
				VerticalAlignment="Top">
				<UIElement.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform />
						<TranslateTransform />
					</TransformGroup>
				</UIElement.RenderTransform>
				<Border
					BorderThickness="1"
					HorizontalAlignment="Left"
					Height="67.25"
					Margin="0,13,0,0"
					VerticalAlignment="Top"
					Width="70"
					Background="#FF1B252C" />
				<Path
					Data="M15.7456,5.5 C14.7216,14.003 10,17.5 0,18.5 L16,19 C16,10.6489 17.4316,-8.5 15.7456,5.5"
					HorizontalAlignment="Left"
					Height="15"
					Margin="52,0,0,0"
					Stretch="Fill"
					VerticalAlignment="Top"
					Width="15"
					Fill="#FF1B252C" />
				<Path
					Data="M15.7456,13.5 C14.7216,4.99705 10,1.50002 0,0.500027 L16,-5.72205E-06 C16,8.35113 17.4316,27.5 15.7456,13.5"
					Fill="#FF1B252C"
					HorizontalAlignment="Left"
					Height="10"
					Margin="55,78,0,0"
					Stretch="Fill"
					VerticalAlignment="Top"
					Width="10" />
			</Grid>
			<RadioButton
				Name="home"
				HorizontalAlignment="Left"
				Height="60"
				Margin="0,80,0,0"
				VerticalAlignment="Top"
				Width="65"
				Style="{DynamicResource switch}"
				Foreground="#FF445663"
				IsChecked="True"
				Cursor="Hand">
				<Grid
					Height="60"
					Width="55">
					<Ellipse
						HorizontalAlignment="Left"
						Height="19.453"
						Margin="19.78,12.94,0,0"
						VerticalAlignment="Top"
						Width="18.76"
						StrokeThickness="2.2"
						Stroke="{Binding Foreground, ElementName=home}" />
					<Path
						Data="M10.508,1.13131 L10.5079,1.13134 L3.85244,3.37504 L3.85243,3.37504 C3.72115,3.41931 3.60202,3.49383 3.5044,3.59255 C3.40679,3.69128 3.33336,3.8115 3.2898,3.94364 L3.28979,3.94365 L1.07131,10.6747 C1.07131,10.6747 1.0713,10.6747 1.0713,10.6747 C1.01922,10.8327 1.01167,11.0021 1.04948,11.1642 C1.08728,11.3262 1.16901,11.4746 1.28571,11.5926 C1.40243,11.7106 1.54953,11.7937 1.7106,11.8321 C1.87169,11.8706 2.0402,11.8629 2.19717,11.8099 L8.85262,9.56623 L8.85263,9.56622 C8.98391,9.52196 9.10304,9.44744 9.20066,9.34871 C9.29828,9.24999 9.3717,9.12977 9.41526,8.99763 L9.41527,8.99762 L11.6338,2.26653 L11.6338,2.26644 C11.6857,2.1085 11.6932,1.9391 11.6553,1.77716 C11.6174,1.61521 11.5357,1.46692 11.419,1.34897 C11.3023,1.23098 11.1554,1.14796 10.9944,1.10945 C10.8334,1.07093 10.6649,1.07851 10.508,1.13131 M3.32109,9.53839 L4.78468,5.09906 L7.71121,8.05884 L3.32109,9.53839"
						HorizontalAlignment="Left"
						Height="9.365"
						Margin="24.75,17.684,0,0"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="8.71"
						Fill="{Binding Foreground, ElementName=home}" />
					<TextBlock
						Name="homelbl"
						HorizontalAlignment="Center"
						Margin="10,43,6,0"
						TextWrapping="Wrap"
						Text="HOME"
						VerticalAlignment="Top"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins ExtraBold"
						FontSize="9"
						FontWeight="Bold"
						Foreground="{Binding Foreground, ElementName=home}" />
				</Grid>
			</RadioButton>
			<RadioButton
				Name="cloud"
				HorizontalAlignment="Left"
				Height="60"
				Margin="0,145,0,0"
				VerticalAlignment="Top"
				Width="65"
				Style="{DynamicResource switch}"
				Foreground="#FF445663"
				Cursor="Hand">
				<Grid
					Height="60"
					Width="55">
					<Path
						Data="M15.2,2.1 C13.1046,2.1 11.4,3.7485 11.4,5.775 C11.4,7.4067 12.5129,8.77695 14.0383,9.25575 C13.8798,10.2343 13.4444,11.0407 12.7029,11.6949 C10.5901,13.5565 6.70211,13.7266 4.88571,13.6972 L4.88571,7.17885 C6.44914,6.72315 7.6,5.334 7.6,3.675 C7.6,1.6485 5.89543,0 3.8,0 C1.70457,0 0,1.6485 0,3.675 C0,5.334 1.15086,6.72315 2.71429,7.17885 L2.71429,13.8211 C1.15086,14.2768 0,15.666 0,17.325 C0,19.3515 1.70457,21 3.8,21 C5.89543,21 7.6,19.3515 7.6,17.325 C7.6,16.7464 7.448,16.2068 7.20154,15.7196 C9.43812,15.5243 12.2577,14.9247 14.1599,13.252 C15.3509,12.2052 16.0393,10.8748 16.2271,9.29565 C17.822,8.8599 19,7.455 19,5.775 C19,3.7485 17.2954,2.1 15.2,2.1 M2.17143,3.675 C2.17143,2.80665 2.90211,2.1 3.8,2.1 C4.69789,2.1 5.42857,2.80665 5.42857,3.675 C5.42857,4.54335 4.69789,5.25 3.8,5.25 C2.90211,5.25 2.17143,4.54335 2.17143,3.675 M3.8,18.9 C2.90211,18.9 2.17143,18.1933 2.17143,17.325 C2.17197,16.9109 2.34112,16.5137 2.64226,16.2193 C2.9434,15.9249 3.3523,15.7571 3.78046,15.7521 L3.9216,15.7626 C4.13461,15.7703 4.34397,15.8185 4.53771,15.9045 C4.73145,15.9905 4.90578,16.1125 5.05076,16.2636 C5.19574,16.4148 5.30851,16.592 5.38265,16.7853 C5.45679,16.9786 5.49084,17.1841 5.48286,17.3901 C5.47487,17.5961 5.42501,17.7986 5.33612,17.9859 C5.24723,18.1733 5.12104,18.3419 4.96478,18.4821 C4.80851,18.6223 4.62522,18.7314 4.42536,18.8031 C4.22551,18.8748 4.01301,18.9077 3.8,18.9 M15.2,7.35 C14.3021,7.35 13.5714,6.64335 13.5714,5.775 C13.5714,4.90665 14.3021,4.2 15.2,4.2 C16.0979,4.2 16.8286,4.90665 16.8286,5.775 C16.8286,6.64335 16.0979,7.35 15.2,7.35"
						HorizontalAlignment="Left"
						Height="18"
						Margin="22,13.667,0,0"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="16"
						Fill="{Binding Foreground, ElementName=cloud}" />
					<TextBlock
						Name="scrptslbl"
						HorizontalAlignment="Center"
						Margin="10,42,6,4"
						TextWrapping="Wrap"
						Text="SCRIPTS"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins ExtraBold"
						FontSize="9"
						FontWeight="Bold"
						TextAlignment="Center"
						Width="39"
						Foreground="{Binding Foreground, ElementName=cloud}" />
				</Grid>
			</RadioButton>
			<RadioButton
				Name="theme"
				HorizontalAlignment="Left"
				Height="60"
				Margin="0,205,0,0"
				VerticalAlignment="Top"
				Width="65"
				Style="{DynamicResource switch}"
				Foreground="#FF445663"
				Cursor="Hand"
				Checked="theme_Checked">
				<Grid
					Height="60"
					Width="55">
					<Path
						Data="M12.65,41.25 Q7.8,41.25 4.325,37.85 Q0.85,34.45 0.85,29.55 Q0.85,25.35 3.4,22.025 Q5.95,18.7 10.05,18 Q11.25,13 15.15,9.875 Q19.05,6.75 24.1,6.75 Q29.9,6.75 34,10.875 Q38.1,15 38.5,20.85 L38.5,22.05 Q42.25,22.4 44.7,25.075 Q47.15,27.75 47.15,31.65 Q47.15,35.65 44.35,38.45 Q41.55,41.25 37.55,41.25 M12.65,36.55 L37.45,36.55 Q39.45,36.55 40.95,35.075 Q42.45,33.6 42.45,31.55 Q42.45,29.5 40.95,28.025 Q39.45,26.55 37.45,26.55 L33.85,26.55 L33.85,21.8 Q33.85,17.5 30.975,14.5 Q28.1,11.5 23.9,11.5 Q19.65,11.5 16.775,14.675 Q13.9,17.85 13.9,22.35 L12.5,22.35 Q9.6,22.35 7.575,24.4 Q5.55,26.45 5.55,29.45 Q5.55,32.4 7.625,34.475 Q9.7,36.55 12.65,36.55 M24,24"
						HorizontalAlignment="Left"
						Height="16"
						Margin="19,18,0,0"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="21"
						Fill="{Binding Foreground, ElementName=theme}" />
					<TextBlock
						Name="thmlbl"
						HorizontalAlignment="Center"
						Margin="3,43,0,0"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins ExtraBold"
						FontSize="9"
						FontWeight="Bold"
						Width="52"
						TextAlignment="Center"
						Foreground="{Binding Foreground, ElementName=theme}">
						<Run
							Text="THEME" />
						<Run
							Text="S" />
					</TextBlock>
				</Grid>
			</RadioButton>
			<RadioButton
				Name="config"
				HorizontalAlignment="Left"
				Height="60"
				Margin="0,265,0,0"
				VerticalAlignment="Top"
				Width="65"
				Style="{DynamicResource switch}"
				Foreground="#FF445663"
				Cursor="Hand">
				<Grid
					Height="60"
					Width="55">
					<Path
						Data="M18.5833,6.75 C17.9128,6.75188 17.2592,6.96112 16.7123,7.34901 C16.1654,7.73691 15.7518,8.28449 15.5283,8.91667 L1.24996,8.91667 C0.962641,8.91667 0.687091,9.0308 0.483927,9.23397 C0.280763,9.43713 0.166626,9.71268 0.166626,10 C0.166626,10.2873 0.280763,10.5629 0.483927,10.766 C0.687091,10.9692 0.962641,11.0833 1.24996,11.0833 L15.5283,11.0833 C15.727,11.6454 16.0766,12.1421 16.5387,12.5188 C17.0007,12.8956 17.5576,13.138 18.1482,13.2195 C18.7388,13.301 19.3405,13.2184 19.8873,12.9809 C20.4342,12.7433 20.9051,12.3599 21.2487,11.8726 C21.5922,11.3853 21.7951,10.8129 21.8351,10.2181 C21.8751,9.6232 21.7507,9.02878 21.4755,8.49988 C21.2003,7.97097 20.7849,7.52796 20.2748,7.21933 C19.7647,6.91069 19.1795,6.74832 18.5833,6.75 M18.5833,11.0833 C18.369,11.0833 18.1596,11.0198 17.9814,10.9008 C17.8033,10.7817 17.6644,10.6125 17.5824,10.4146 C17.5004,10.2166 17.479,9.9988 17.5208,9.78865 C17.5626,9.5785 17.6658,9.38547 17.8173,9.23397 C17.9688,9.08246 18.1618,8.97928 18.3719,8.93748 C18.5821,8.89568 18.7999,8.91713 18.9979,8.99913 C19.1958,9.08112 19.365,9.21998 19.4841,9.39813 C19.6031,9.57628 19.6666,9.78574 19.6666,10 C19.6666,10.2873 19.5525,10.5629 19.3493,10.766 C19.1462,10.9692 18.8706,11.0833 18.5833,11.0833 M1.24996,4.58333 L2.52829,4.58333 C2.75601,5.21075 3.17139,5.75283 3.71797,6.13592 C4.26455,6.51901 4.91583,6.72451 5.58329,6.72451 C6.25076,6.72451 6.90203,6.51901 7.44861,6.13592 C7.9952,5.75283 8.41057,5.21075 8.63829,4.58333 L20.75,4.58333 C21.0373,4.58333 21.3128,4.46919 21.516,4.26603 C21.7192,4.06287 21.8333,3.78732 21.8333,3.5 C21.8333,3.21268 21.7192,2.93713 21.516,2.73397 C21.3128,2.5308 21.0373,2.41667 20.75,2.41667 L8.63829,2.41667 C8.41057,1.78925 7.9952,1.24716 7.44861,0.864077 C6.90203,0.48099 6.25076,0.275482 5.58329,0.275482 C4.91583,0.275482 4.26455,0.48099 3.71797,0.864077 C3.17139,1.24716 2.75601,1.78925 2.52829,2.41667 L1.24996,2.41667 C0.962641,2.41667 0.687091,2.5308 0.483927,2.73397 C0.280763,2.93713 0.166626,3.21268 0.166626,3.5 C0.166626,3.78732 0.280763,4.06287 0.483927,4.26603 C0.687091,4.46919 0.962641,4.58333 1.24996,4.58333 M5.58329,2.41667 C5.79756,2.41667 6.00701,2.4802 6.18516,2.59924 C6.36331,2.71828 6.50217,2.88747 6.58416,3.08542 C6.66616,3.28338 6.68761,3.5012 6.64581,3.71135 C6.60401,3.92149 6.50083,4.11452 6.34933,4.26603 C6.19782,4.41754 6.00479,4.52072 5.79464,4.56252 C5.58449,4.60432 5.36667,4.58286 5.16872,4.50087 C4.97077,4.41887 4.80157,4.28002 4.68253,4.10187 C4.5635,3.92371 4.49996,3.71426 4.49996,3.5 C4.49996,3.21268 4.6141,2.93713 4.81726,2.73397 C5.02043,2.5308 5.29597,2.41667 5.58329,2.41667 M20.75,15.4167 L12.9716,15.4167 C12.7439,14.7892 12.3285,14.2472 11.7819,13.8641 C11.2354,13.481 10.5841,13.2755 9.91663,13.2755 C9.24916,13.2755 8.59789,13.481 8.0513,13.8641 C7.50472,14.2472 7.08935,14.7892 6.86163,15.4167 L1.24996,15.4167 C0.962641,15.4167 0.687091,15.5308 0.483927,15.734 C0.280763,15.9371 0.166626,16.2127 0.166626,16.5 C0.166626,16.7873 0.280763,17.0629 0.483927,17.266 C0.687091,17.4692 0.962641,17.5833 1.24996,17.5833 L6.86163,17.5833 C7.08935,18.2107 7.50472,18.7528 8.0513,19.1359 C8.59789,19.519 9.24916,19.7245 9.91663,19.7245 C10.5841,19.7245 11.2354,19.519 11.7819,19.1359 C12.3285,18.7528 12.7439,18.2107 12.9716,17.5833 L20.75,17.5833 C21.0373,17.5833 21.3128,17.4692 21.516,17.266 C21.7192,17.0629 21.8333,16.7873 21.8333,16.5 C21.8333,16.2127 21.7192,15.9371 21.516,15.734 C21.3128,15.5308 21.0373,15.4167 20.75,15.4167 M9.91663,17.5833 C9.70236,17.5833 9.49291,17.5198 9.31476,17.4008 C9.13661,17.2817 8.99775,17.1125 8.91576,16.9146 C8.83376,16.7166 8.81231,16.4988 8.85411,16.2886 C8.89591,16.0785 8.99909,15.8855 9.15059,15.734 C9.3021,15.5825 9.49513,15.4793 9.70528,15.4375 C9.91542,15.3957 10.1332,15.4171 10.3312,15.4991 C10.5292,15.5811 10.6983,15.72 10.8174,15.8981 C10.9364,16.0763 11,16.2857 11,16.5 C11,16.7873 10.8858,17.0629 10.6827,17.266 C10.4795,17.4692 10.2039,17.5833 9.91663,17.5833"
						HorizontalAlignment="Left"
						Height="17"
						Margin="19,18,0,0"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="19"
						Fill="{Binding Foreground, ElementName=config}" />
					<TextBlock
						Name="cnfglbl"
						HorizontalAlignment="Center"
						Margin="3,43,0,0"
						TextWrapping="Wrap"
						Text="CONFIG"
						VerticalAlignment="Top"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins ExtraBold"
						FontSize="9"
						FontWeight="Bold"
						Width="52"
						TextAlignment="Center"
						Foreground="{Binding Foreground, ElementName=config}" />
				</Grid>
			</RadioButton>
			<Button
				Name="button_Copy"
				Margin="0,7.25,8,0"
				Style="{DynamicResource close}"
				Cursor="Hand"
				Width="29"
				Height="29"
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				BorderBrush="{x:Null}"
				Background="{x:Null}"
				Click="button_Copy_Click">
				<Path
					Data="M8.265,0.929289 L8.19429,0.858579 L8.12358,0.929289 L5,4.05286 L1.87642,0.929289 L1.80571,0.858579 L1.735,0.929289 L0.929289,1.735 L0.858579,1.80571 L0.929289,1.87642 L4.05286,5 L0.929289,8.12358 L0.858579,8.19429 L0.929289,8.265 L1.735,9.07071 L1.80571,9.14142 L1.87642,9.07071 L5,5.94714 L8.12358,9.07071 L8.19429,9.14142 L8.265,9.07071 L9.07071,8.265 L9.14142,8.19429 L9.07071,8.12358 L5.94714,5 L9.07071,1.87642 L9.14142,1.80571 L9.07071,1.735 L8.265,0.929289"
					Fill="#FF547993"
					Height="10"
					Stretch="Fill"
					Width="10" />
			</Button>
			<Button
				Name="button_Copy1"
				Margin="0,7.25,42,0"
				Style="{DynamicResource close}"
				Cursor="Hand"
				Width="29"
				Height="29"
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				BorderBrush="{x:Null}"
				Background="{x:Null}"
				Click="button_Copy1_Click">
				<Border
					BorderBrush="#FF547993"
					BorderThickness="1.3"
					Height="10"
					Width="10"
					CornerRadius="1" />
			</Button>
			<Button
				Name="button_Copy2"
				Margin="0,7.25,76,0"
				Style="{DynamicResource close}"
				Cursor="Hand"
				Width="29"
				Height="29"
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				BorderBrush="{x:Null}"
				Background="{x:Null}"
				Click="button_Copy2_Click">
				<Border
					BorderBrush="#FF547993"
					BorderThickness="1.3"
					Height="2"
					Width="10" />
			</Button>
			<Image
				RenderOptions.BitmapScalingMode="HighQuality"
				Source="Assets/Imgs/delta.png"
				Stretch="Fill"
				Margin="18,18,0,0"
				HorizontalAlignment="Left"
				Width="30"
				Height="30"
				VerticalAlignment="Top" />
		</Grid>
		<Grid
			Name="modals"
			Visibility="Hidden">
			<Border
				Name="eula"
				BorderThickness="1.5"
				CornerRadius="4"
				Margin="50"
				Background="#FF212D34"
				BorderBrush="#FF414141"
				Opacity="0">
				<Grid>
					<Path
						Data="M10.59,0.59 C10.21,0.21 9.7,0 9.17,0 L2,0 C0.9,0 0,0.9 0,2 L0,18 C0,19.1 0.89,20 1.99,20 L14,20 C15.1,20 16,19.1 16,18 L16,6.83 C16,6.3 15.79,5.79 15.41,5.42 L10.59,0.59 M11,16 L5,16 C4.45,16 4,15.55 4,15 C4,14.45 4.45,14 5,14 L11,14 C11.55,14 12,14.45 12,15 C12,15.55 11.55,16 11,16 M11,12 L5,12 C4.45,12 4,11.55 4,11 C4,10.45 4.45,10 5,10 L11,10 C11.55,10 12,10.45 12,11 C12,11.55 11.55,12 11,12 M9,6 L9,1.5 L14.5,7 L10,7 C9.45,7 9,6.55 9,6"
						Fill="#FF8BA6B8"
						HorizontalAlignment="Left"
						Height="14"
						Margin="21,18.312,0,0"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="11" />
					<TextBlock
						Name="eula_title"
						Height="19"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Foreground="#FF8BA6B8"
						Margin="42,16.125,0,0"
						FontSize="13"
						Width="336.333"
						HorizontalAlignment="Left">
						<Run
							Foreground="#FFB1CADA"
							FontSize="14"
							Text="End User License Agreement (&quot;EULA&quot;) for Delta:" />
					</TextBlock>
					<ScrollViewer
						VerticalScrollBarVisibility="Auto"
						HorizontalScrollBarVisibility="Disabled"
						Margin="0,52,0,41">
						<TextBlock
							Name="eula_text"
							TextWrapping="Wrap"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins Medium"
							Foreground="#FF748EA0"
							Margin="19,0,24,0"
							FontSize="14">
							<Run
								Text="Please read this End User License Agreement (&quot;EULA&quot;) carefully before using Delta (&quot;Software&quot;). By using the Software, you are agreeing to be bound by the terms of this EULA. If you do not agree to the terms of this EULA, do not use the Software." />
							<LineBreak />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Download:" />
							<LineBreak />
							<Run
								Text="The user can only download the Software from deltaexploits.com or its mirror deltaexploits.net. The user agrees not to download or install the Software from any other sources." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Functionality" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="Delta is a tool used to enhance the user's experience on the Roblox platform. The Software provides a variety of features, including but not limited to FPS unlocking, script execution, and more." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Fair Use" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The Software is not intended to be used as a cheat, and is not intended for the user to gain an unfair advantage. The user agrees not to use the Software for any purpose that violates Roblox's terms of service or any applicable laws or regulations. If the user decides to use the Software in this manner, they may face consequences such as game bans, temporary and permanent Roblox bans, and other penalties." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Responsibility" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The Software is a third-party tool designed to enhance the user's experience on the Roblox platform. By using the Software, the user agrees to take full responsibility for any actions taken on their Roblox account. The Software is not responsible for any actions taken by the user." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Logging" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The Software may log the user's hashed hardware ID (HWID) and Internet Protocol (IP) address for the purpose of improving the Software. The user agrees to the collection and use of this information." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Modifications" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The user agrees not to modify, adapt, translate, or create derivative works based on the Software." />
							<LineBreak />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Distribution" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The user agrees not to distribute any modified pieces of the Software, which includes any modules or DLLs, or distribute the Software illegally in any way." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Theft" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The user agrees not to steal/distribute the module or DLL used by the Software." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Copyright" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The Software is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The Software is licensed, not sold." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Termination" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="This EULA will terminate automatically if the user fails to comply with any of the terms and conditions of this EULA. Upon termination, the user must immediately cease all use of the Software and destroy all copies of the Software." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Disclaimer of Warranties" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="The Software is provided &quot;as is&quot; without warranty of any kind, either express or implied, including but not limited to the implied warranties of merchantability and fitness for a particular purpose." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Limitation of" />
							<Run
								Foreground="#FFB1CADA"
								Text=" " />
							<Run
								Foreground="#FFB1CADA"
								Text="liability" />
							<Run
								Foreground="#FFB1CADA"
								Text=": " />
							<LineBreak />
							<Run
								Text="In no event shall the Software be liable for any direct, indirect, incidental, special, or consequential damages arising out of or in connection with the use or inability to use the Software, even if the Software has been advised of the possibility of such damages." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Governing law" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="This EULA shall be governed by and construed in accordance with the laws of the state in which the Software is licensed." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Foreground="#FFB1CADA"
								Text="Entire agreement" />
							<Run
								Foreground="#FFB1CADA"
								Text=":" />
							<LineBreak />
							<Run
								Text="This EULA constitutes the entire agreement between the user and the Software and supersedes all prior agreements or understandings, whether written or oral, regarding the Software." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run
								Text="By using the Software, the user acknowledges that they have read this EULA, understand it, and agree to be bound by its terms and conditions." />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run />
							<LineBreak />
							<Run />
						</TextBlock>
					</ScrollViewer>
					<Button
						HorizontalAlignment="Right"
						Height="29"
						Margin="0,10,10,0"
						VerticalAlignment="Top"
						Width="27.667"
						Style="{DynamicResource flatbutton}"
						Cursor="Hand"
						BorderBrush="{x:Null}"
						Click="Button_Click_13">
						<Control.Background>
							<SolidColorBrush
								Color="Black"
								Opacity="0.0025" />
						</Control.Background>
						<Grid
							Height="25"
							Width="32">
							<Path
								Data="M16,16 L2,16 L2,2 L7,2 L7,0 L2,0 C1.46957,0 0.960859,0.210714 0.585786,0.585786 C0.210714,0.960859 0,1.46957 0,2 L0,16 C0,16.5304 0.210714,17.0391 0.585786,17.4142 C0.960859,17.7893 1.46957,18 2,18 L16,18 C16.5304,18 17.0391,17.7893 17.4142,17.4142 C17.7893,17.0391 18,16.5304 18,16 L18,11 L16,11 L16,16"
								Fill="#FF8BA6B8"
								HorizontalAlignment="Left"
								Height="12.625"
								Margin="5.625,6.07,0,0"
								Stretch="Fill"
								VerticalAlignment="Top"
								Width="12.375" />
							<Path
								Data="M9.99961,0 L13.2996,3.3 L7.59961,9 L8.99961,10.4 L14.6996,4.7 L17.9996,8 L17.9996,0 L9.99961,0"
								Fill="#FF8BA6B8"
								HorizontalAlignment="Left"
								Height="7.18"
								Margin="11.375,6.07,0,0"
								Stretch="Fill"
								VerticalAlignment="Top"
								Width="6.625" />
						</Grid>
					</Button>
					<Border
						BorderThickness="1"
						Height="30"
						Margin="10,336,0,0"
						VerticalAlignment="Top"
						Background="#FF172026"
						CornerRadius="4"
						HorizontalAlignment="Left">
						<TextBlock
							Name="thxforusingdelta"
							Height="19"
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							Foreground="#FF748EA0"
							Margin="8,5,8,0"
							Text="Thanks for using Delta &lt;3" />
					</Border>
					<Button
						Name="execute_again_button_Copy"
						Content="Agree and Continue"
						HorizontalAlignment="Right"
						Height="31"
						Margin="0,0,5,5"
						VerticalAlignment="Bottom"
						Width="142.014"
						Background="#FF1E2931"
						BorderBrush="#FF2C6E9C"
						Style="{DynamicResource execute}"
						BorderThickness="1.5"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Foreground="#FF54A1D8"
						Click="execute_again_button_Copy_Click" />
				</Grid>
			</Border>
			<Border
				Name="download_progress"
				BorderThickness="1.5"
				CornerRadius="4"
				Margin="50,105,50,124"
				Background="#FF212D34"
				BorderBrush="#FF414141"
				Opacity="0">
				<Grid>
					<Path
						Data="M10.59,0.59 C10.21,0.21 9.7,0 9.17,0 L2,0 C0.9,0 0,0.9 0,2 L0,18 C0,19.1 0.89,20 1.99,20 L14,20 C15.1,20 16,19.1 16,18 L16,6.83 C16,6.3 15.79,5.79 15.41,5.42 L10.59,0.59 M11,16 L5,16 C4.45,16 4,15.55 4,15 C4,14.45 4.45,14 5,14 L11,14 C11.55,14 12,14.45 12,15 C12,15.55 11.55,16 11,16 M11,12 L5,12 C4.45,12 4,11.55 4,11 C4,10.45 4.45,10 5,10 L11,10 C11.55,10 12,10.45 12,11 C12,11.55 11.55,12 11,12 M9,6 L9,1.5 L14.5,7 L10,7 C9.45,7 9,6.55 9,6"
						Fill="#FF8BA6B8"
						HorizontalAlignment="Left"
						Height="14"
						Margin="21,18.312,0,0"
						Stretch="Fill"
						VerticalAlignment="Top"
						Width="11" />
					<TextBlock
						Name="eula_title1"
						Height="19"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Foreground="#FF8BA6B8"
						Margin="42,16.125,0,0"
						FontSize="13"
						Width="336.333"
						HorizontalAlignment="Left">
						<Run
							Foreground="#FFB1CADA"
							FontSize="14"
							Text="Delta Module/DLL Update" />
					</TextBlock>
					<TextBlock
						Name="thxforusingdelta1_Copy"
						Height="19"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
						Foreground="#FF748EA0"
						Margin="244,102,244,0"
						Text="Downloaded 0/100%"
						HorizontalAlignment="Center" />
					<ProgressBar
						Name="progrbar"
						Margin="80,133,80,94"
						RenderTransformOrigin="0.5,0.5"
						Background="#FF1B252C"
						Foreground="#FF7CA2BC"
						Style="{DynamicResource ProgressBarStyle1}"
						Height="15"
						BorderBrush="{x:Null}">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform
									ScaleY="-1" />
								<SkewTransform />
								<RotateTransform />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
					</ProgressBar>
					<Button
						HorizontalAlignment="Right"
						Height="29"
						Margin="0,10,10,0"
						VerticalAlignment="Top"
						Width="27.667"
						Style="{DynamicResource flatbutton}"
						Cursor="Hand"
						BorderBrush="{x:Null}"
						Click="Button_Click_13">
						<Control.Background>
							<SolidColorBrush
								Color="Black"
								Opacity="0.0025" />
						</Control.Background>
						<Grid
							Height="25"
							Width="32">
							<Path
								Data="M16,16 L2,16 L2,2 L7,2 L7,0 L2,0 C1.46957,0 0.960859,0.210714 0.585786,0.585786 C0.210714,0.960859 0,1.46957 0,2 L0,16 C0,16.5304 0.210714,17.0391 0.585786,17.4142 C0.960859,17.7893 1.46957,18 2,18 L16,18 C16.5304,18 17.0391,17.7893 17.4142,17.4142 C17.7893,17.0391 18,16.5304 18,16 L18,11 L16,11 L16,16"
								Fill="#FF8BA6B8"
								HorizontalAlignment="Left"
								Height="12.625"
								Margin="5.625,6.07,0,0"
								Stretch="Fill"
								VerticalAlignment="Top"
								Width="12.375" />
							<Path
								Data="M9.99961,0 L13.2996,3.3 L7.59961,9 L8.99961,10.4 L14.6996,4.7 L17.9996,8 L17.9996,0 L9.99961,0"
								Fill="#FF8BA6B8"
								HorizontalAlignment="Left"
								Height="7.18"
								Margin="11.375,6.07,0,0"
								Stretch="Fill"
								VerticalAlignment="Top"
								Width="6.625" />
						</Grid>
					</Button>
					<Border
						BorderThickness="1"
						Height="30"
						Margin="10,0,0,7"
						VerticalAlignment="Bottom"
						Background="#FF172026"
						CornerRadius="4"
						HorizontalAlignment="Left">
						<TextBlock
							Name="thxforusingdelta1_Copy1"
							Height="19"
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							FontFamily="/Delta;component/Assets/Fonts/#Poppins SemiBold"
							Foreground="#FF748EA0"
							Margin="8,5,8,0"
							Text="Thanks for using Delta &lt;3" />
					</Border>
				</Grid>
			</Border>
		</Grid>
	</Grid>
</Window>
